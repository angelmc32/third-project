{"version":3,"sources":["assets/images/logo/center-logo","assets/images/avatars/user-avatar.png","AppContext.js","components/common/Searchbar.jsx","services/auth-services.js","components/auth/AuthForm.jsx","hooks/useForm.js","components/auth/Signup.jsx","components/auth/Login.jsx","services/profile-services.js","components/profile/Profile.jsx","components/common/Loader.jsx","components/profile/Preferences.jsx","services/doctor-services.js","components/doctor/DoctorCard.jsx","services/patient-services.js","components/schedule/CalendarForm.jsx","services/consultation-services.js","components/schedule/Calendar.jsx","components/doctor/DoctorInfo.jsx","components/doctor/Doctors.jsx","components/doctor/DoctorLanding.jsx","components/doctor/myPatients/Patients.jsx","services/facility-services.js","components/facility/FacilityCard.jsx","components/common/Mapbox.jsx","components/facility/FacilityForm.jsx","components/facility/FacilityInfo.jsx","components/facility/FacilityInfoSpecial.jsx","components/facility/Facility.jsx","components/consultation/MyConsultations.jsx","components/consultation/ConsultationForm.jsx","components/consultation/ConsultationInfo.jsx","components/consultation/Consultation.jsx","components/prescription/MyPrescriptions.jsx","components/prescription/PrescriptionForm.jsx","components/prescription/PrescriptionInfo.jsx","components/prescription/Prescription.jsx","services/prescription-services.js","Router.js","components/common/Nav.jsx","components/common/Sidebar.jsx","App.js","serviceWorker.js","index.js","assets/images/stethoscope.svg","assets/images/homemarker.svg","assets/images/hospital.svg","assets/images/landing/doctor.svg","assets/images/landing/first-aid-kit.svg","assets/images/landing/hospital.svg","assets/images/landing/medical-file.svg","assets/images/landing/prescription.svg","assets/images/landing/vademecum.svg"],"names":["module","exports","AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","route","setRoute","special","setSpecial","userContext","resetUserContext","Provider","value","Searchbar","single","className","href","uk-search-icon","type","placeholder","base_url","AuthForm","submit","action","usertype","email","password","confpassword","handleChange","to","onSubmit","uk-icon","onChange","name","useForm","form","setForm","array","setArray","handleInput","event","target","id","push","prevState","handleFileInput","files","Signup","useContext","useHistory","data","preventDefault","axios","post","then","res","token","setItem","stringify","UIkit","notification","message","pos","status","catch","msg","response","Login","getPreferences","get","headers","Authorization","editPreferences","patch","Profile","useEffect","_id","formData","FormData","profile_picture","key","append","editProfile","error","console","log","defaultValue","first_name","last_name1","last_name2","moment","utc","date_of_birth","format","gender","width","height","src","alt","uk-form-custom","multiple","curp","AppLoader","color","timeout","Preferences","preferences","setPreferences","curriculum","setCurriculum","zones","getCurriculum","handleSubmit","editCurriculum","onClick","base_price","bio","rows","med_license","university","specialty","specialty_license","specialty_univ","subspecialty","subspecialty_license","subspecialty_univ","getDoctors","DoctorCard","rating","is_verified","preference","showDoctor","map","zone","currencyFormatter","code","getAllPatients","CalendarForm","consultation","patients","setPatients","dateStr","slice","patient","index","getDoctorConsultations","doctorID","Calendar","calendarPlugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","setConsultations","setConsultation","events","setEvents","confirmation","setConfirmation","consultations","handleDateClick","arg","concat","title","start","date","allDay","local","doctor","createDoctorConsultation","createUserConsultation","defaultView","header","left","center","right","locale","esLocale","minTime","plugins","dateClick","DoctorInfo","getDoctorCurriculum","Doctors","doctors","setDoctors","setDoctor","setPreference","uk-grid","DoctorLanding","uk-slider","img_doctor","img_firstaid","img_hospital","img_medical_file","img_prescription","img_vademecum","Patients","dateTime","createFacility","updateFacility","FacilityCard","images","price","description","preview","owner","showFacility","edit","tabIndex","uk-slideshow","image","uk-cover","uk-slidenav-previous","uk-slideshow-item","uk-slidenav-next","Map","facility","facilities","setMap","mapContainer","useRef","styles","position","mapboxgl","accessToken","process","container","current","style","zoom","on","resize","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","geocoder","NavigationControl","el","document","createElement","Marker","setLngLat","coordinates","addTo","forEach","marker","initializeMap","MapboxGeocoder","result","geometry","place_name","address","ref","FacilityForm","formattedImages","setFormattedImages","getDataUrl","Array","from","file","reader","FileReader","readAsDataURL","onload","showMap","length","FacilityInfo","toggleFavorite","favorites","isFavorite","viewMap","setViewMap","i","is_med_facility","Facility","setFacilities","setFacility","setFavorites","getUserFacilities","getFacilityInfo","delete","deleteFacility","coord","facilityID","FacilityInfoSpecial","show","MyConsultations","patientID","getPatientConsultations","handleButtonClick","consultationID","newRoute","chief_complaint","diagnosis","isDone","prescription","ConsultationForm","phys_exam","prognosis","ConsultationInfo","disabled","systems_chief_complaint","Consultation","getConsultationInfo","editConsultation","MyPrescriptions","prescriptions","setPrescription","generic_name","PrescriptionForm","brand_name","dose","dosage_form","directions","PrescriptionInfo","Prescription","prescriptionID","setPrescriptions","getUserPrescriptions","getPrescriptionInfo","createPrescription","Router","exact","path","Nav","uk-navbar","clear","Sidebar","handleRoute","uk-nav","App","Boolean","window","location","hostname","match","use","Icons","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9b34c44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/center-logo.a441e8e5.bin\";","module.exports = __webpack_public_path__ + \"static/media/user-avatar.e27c8735.png\";","import React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [user, setUser] = useState(initialUserState);\n  const [route, setRoute] = useState(\"none\");\n  const [special, setSpecial] = useState();\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n    setRoute(\"none\");\n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, route, setRoute, special, setSpecial, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import React from 'react';\n\nconst Searchbar = ({single}) => {\n  if ( single ) {\n    return (\n      <form className=\"uk-search uk-search-default uk-width-2-3\">\n        <a href=\"#\" className=\"uk-search-icon-flip\" uk-search-icon=\"true\"></a>\n        <input className=\"uk-search-input\" type=\"search\" placeholder=\"Search...\" />\n      </form>\n    )\n  } else {\n    return (\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center\">\n        <form className=\"uk-search uk-search-default uk-width-4-5\">\n          <input className=\"uk-search-input uk-width-1-3\" type=\"date\" placeholder=\"Fecha de nacimiento\" />\n          <input className=\"uk-search-input uk-width-1-3\" type=\"search\" placeholder=\"Apellido\" />\n          <input className=\"uk-search-input uk-width-1-3\" type=\"search\" placeholder=\"Nombre\" />\n        </form>\n        <button className=\"uk-button uk-button-danger uk-button-small\">+</button>\n      </div>\n      \n    )\n  }\n};\n\nexport default Searchbar;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};","import React from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// email, password and confpassword variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, usertype, email = '', password = '', confpassword = '', handleChange } ) => (\n\n  usertype === \"Patient\" ? (\n    <div>\n    \n      <div className=\"uk-margin-bottom\">\n\n        <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n    \n        { action === \"signup\" ? (\n          <h5>¿Ya tienes cuenta? \n            <NavLink to=\"/login\" className=\"uk-margin-small-left\">\n              Accede aquí\n            </NavLink>\n          </h5>\n          ) : (\n          <h5>¿Primera vez? \n            <NavLink to=\"/signup\" className=\"uk-margin-small-left\">\n              Regístrate aquí\n            </NavLink>\n          </h5>\n          )\n        }\n\n      </div>\n\n      <div className=\"uk-margin-top\">\n\n        <form className=\"uk-form-stacked uk-margin\" onSubmit={submit}>\n          \n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Correo Electrónico:</label>\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input onChange={handleChange} name=\"email\" value={email} className=\"uk-input\" type=\"email\" />\n            </div>\n          </div>\n\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Contraseña:</label>\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={handleChange}\n                name=\"password\"\n                value={password}\n                className=\"uk-input\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n\n          { action === \"signup\" ? (\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n              <div className=\"uk-inline\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                <input\n                  onChange={handleChange}\n                  name=\"confpassword\"\n                  value={confpassword}\n                  className=\"uk-input\"\n                  type=\"password\"\n                />\n              </div>\n            </div>\n            ) : null }\n\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label uk-margin\">\n              <input onChange={handleChange} className=\"uk-checkbox\" type=\"checkbox\" name=\"usertype\" value={usertype}/> Soy paciente\n            </label>\n          </div>\n\n          <button className=\"uk-button uk-button-primary uk-border-pill\" type=\"submit\">\n            {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n          </button>\n\n        </form>\n\n      </div>\n    </div>\n  ) : (\n    <div>\n\n      <div className=\"uk-margin-bottom\">\n\n        <h2>{action === \"signup\" ? \"Registro Doctores\" : \"Inicio de Sesión Doctores\"}</h2>\n        \n        {action === \"signup\" ? (\n          <h5>¿Ya tienes cuenta? \n            <NavLink to=\"/doctor-login\" className=\"uk-margin-small-left\">\n              Accede aquí\n            </NavLink>\n          </h5>\n          ) : (\n          <h5>¿Primera vez? \n            <NavLink to=\"/doctor-signup\" className=\"uk-margin-small-left\">\n              Regístrate aquí\n            </NavLink>\n          </h5>\n          )}\n\n      </div>\n\n      <div className=\"uk-margin-top\">\n\n        <form className=\"uk-form-stacked uk-margin\" onSubmit={submit}>\n          \n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Correo Electrónico:</label>\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n              <input onChange={handleChange} name=\"email\" value={email} className=\"uk-input\" type=\"email\" />\n            </div>\n          </div>\n\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Contraseña:</label>\n            <div className=\"uk-inline\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={handleChange}\n                name=\"password\"\n                value={password}\n                className=\"uk-input\"\n                type=\"password\"\n              />\n            </div>\n          </div>\n\n          {action === \"signup\" ? (\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n              <div className=\"uk-inline\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                <input\n                  onChange={handleChange}\n                  name=\"confpassword\"\n                  value={confpassword}\n                  className=\"uk-input\"\n                  type=\"password\"\n                />\n              </div>\n            </div>\n          ) : null}\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label uk-margin\">\n              <input onChange={handleChange} className=\"uk-checkbox\" type=\"checkbox\" name=\"usertype\" value={usertype}/> Soy {usertype}\n            </label>\n          </div>\n              \n          <button className=\"uk-button uk-button-primary uk-border-pill\" type=\"submit\">\n            {action === \"signup\" ? \"Registrar\" : \"Entrar\"}\n          </button>\n\n        </form>\n\n      </div>\n    </div>\n  )\n);\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [form, setForm] = useState({});\n  const [array, setArray] = useState([]);\n\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Validation for map toggling in facility form\n    if ( event.target.id === 'toggle-map') form['showMap'] = !form['showMap'];\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    if ( event.target.type === 'checkbox' && event.target.name === 'zones' ) {\n      \n      array.push(value);\n      setArray(array);\n      setForm( prevState => ({...prevState, [name]: array}) );\n\n    } else {\n\n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n\n    }\n\n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, handleInput, handleFileInput };\n\n};\n\nexport default useForm;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\n\n// Declare Signup functional component\nconst Signup = ( { usertype } ) => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      push('/profile');    // \"Redirect\" user to home\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='check'></span> We sent you an e-mail, please verify it to complete the account creation`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container uk-flex uk-flex-center\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          usertype={usertype}\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import React, { useContext } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = ( { usertype } ) => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { setUser, setRoute } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      setRoute('schedule');\n      push('/home');    // \"Redirect\" user to home\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${msg}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container uk-flex uk-flex-center\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          usertype={usertype}\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api' : 'http://localhost:3000/api';\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/profile/edit`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};\n\n// Export get function, which retrieves preferences data from database\nexport const getPreferences = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a get call to our /preferences route\n  return axios.get(`${base_url}/preferences`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editPreferences = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a patch call to our /preferences route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/preferences`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export get function, which retrieves preferences data from database\nexport const getCurriculum = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a get call to our /preferences route\n  return axios.get(`${base_url}/preferences/cv`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export get function, which retrieves preferences data from database\nexport const getDoctorCurriculum = (id) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a get call to our /preferences route\n  return axios.get(`${base_url}/preferences/cv/${id}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const createCurriculum = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a patch call to our /preferences route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/preferences/cv`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editCurriculum = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a patch call to our /preferences route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/preferences/cv`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};","import React, { useEffect, useContext } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/profile-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\n// Declare Profile functional component\nconst Profile = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n  \n  const { user, setUser } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [user] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n\n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { profile_picture } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n    \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    editProfile(formData)\n    .then( res => {\n\n      const { user } = res.data   // Destructure updated user document from response\n      \n      setUser(user);              // Modify user state variable with updated information\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡Tu perfil fue actualizado exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  return (\n    <div className=\"uk-section\">\n\n      <div className=\"uk-container\">\n\n        <h2>Actualiza tu perfil</h2>\n\n        <form className=\"uk-form-stacked uk-margin uk-flex uk-flex-center uk-flex-middle\" onSubmit={handleSubmit}>\n\n          <div className=\"uk-width-1-3\">\n          \n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Nombres:</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"first_name\" defaultValue={user.first_name} className=\"uk-input\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Apellido paterno:</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"last_name1\" defaultValue={user.last_name1} className=\"uk-input\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Apellido materno:</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"last_name2\" defaultValue={user.last_name2} className=\"uk-input\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Fecha de nacimiento: {moment.utc(user.date_of_birth).format('LL')}</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"date_of_birth\" className=\"uk-input\" type=\"date\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Genero: {user.gender === 'F' ? \"Mujer\" : user.gender === 'M' ? \"Hombre\" : \"No binario\"}</label>\n              <div className=\"uk-margin uk-flex uk-flex-around\">\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"F\" />Mujer</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"M\" />Hombre</label>\n                <label><input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"gender\" value=\"U\" />No binario</label>\n              </div>\n            </div>\n            \n          </div>\n\n          <div className=\"uk-width-1-3\">\n\n            <div className=\"uk-width-auto\">\n              <img className=\"uk-border-circle\" width={160} height={160} src={user.profile_picture} alt=\"User profile\" />\n            </div>\n\n            <div className=\"js-upload uk-margin\" uk-form-custom=\"true\">\n              <input onChange={handleFileInput} name=\"profile_picture\" type=\"file\" multiple />\n              <button className=\"uk-button uk-button-default uk-button-small\" type=\"button\">Cambiar foto de perfil</button>\n            </div>\n\n            <div>\n              <label className=\"uk-form-label\">CURP:</label>\n              <div className=\"uk-inline\">\n                <input onChange={handleInput} name=\"curp\" defaultValue={user.curp} className=\"uk-input\" type=\"text\" />\n              </div>\n            </div>\n            \n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Correo Electrónico:</label>\n              <div className=\"uk-inline\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                <input onChange={handleInput} name=\"email\" defaultValue={user.email} className=\"uk-input\" type=\"email\" />\n              </div>\n            </div>\n\n            <button className=\"uk-button uk-button-primary uk-border-pill\" type=\"submit\">\n              Actualizar\n            </button>\n          \n          </div>\n\n        </form>\n\n      </div>\n    </div>\n  );\n\n};\n\nexport default Profile;","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport centerlogo from '../../assets/images/logo/center-logo'\n\nconst AppLoader = () => (\n  \n  <div className=\"uk-container\">\n    <div className=\"loader\">\n      <Loader\n         type=\"BallTriangle\"\n         color=\"#22197F\"\n         height={100}\n         width={100}\n         timeout={0} //infinite\n      />\n    </div>\n  </div>\n)\n\nexport default AppLoader;","import React, { useEffect, useContext, useState } from 'react';     // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport AppLoader from '../common/Loader';                           // Import AppLoader for custom loading spinner\n\n\n// Import API calls for Read and Update\nimport { getPreferences, editPreferences, editCurriculum, getCurriculum } from '../../services/profile-services';\nimport UIkit from 'uikit';               ;                          // Import UIkit for notifications\n\n// Declare Preferences functional component\nconst Preferences = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, setForm, handleInput } = useForm();\n  \n  const { user, route, setRoute } = useContext(AppContext);     // Destructure user state variable\n  const [ preferences, setPreferences ] = useState({});   // Declare preferences state variable and setPreferences method to update preferences\n  const [ curriculum, setCurriculum ] = useState({});   // Declare preferences state variable and setPreferences method to update preferences\n  const { push } = useHistory();                        // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when user or preferences state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    }\n\n    if ( route === 'preferences') {\n\n      setForm({});\n\n      getPreferences()\n      .then( res => {\n\n        const { preferences } = res.data;\n        const { zones } = preferences;\n        setPreferences(preferences);\n\n      })\n      .catch( error => {\n\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    } else if ( route === 'curriculum') {\n\n      setForm({});\n\n      getCurriculum()\n      .then( res => {\n\n        const { curriculum } = res.data;\n        console.log(curriculum);\n        setCurriculum(curriculum);\n\n      })\n      .catch( error => {\n\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    }\n\n    \n\n  }, [user, route] );\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n\n    console.log(form);\n    \n    if ( route === 'preferences' ) {\n\n      // Call edit service with formData as parameter, which includes form data for user profile information\n      editPreferences(form)\n      .then( res => {\n\n        const { preferences } = res.data    // Destructure updated preferences document from response\n        \n        setPreferences(preferences);        // Modify preferences state variable with updated information\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tus preferencias fueron actualizadas exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    } else if ( route === 'curriculum' ) {\n\n      console.log('working on curriculum')\n      // Call edit service with formData as parameter, which includes form data for user profile information\n      editCurriculum(form)\n      .then( res => {\n\n        const { curriculum } = res.data    // Destructure updated preferences document from response\n        \n        setCurriculum(curriculum);        // Modify preferences state variable with updated information\n\n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu curriculum fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n      })\n      .catch( error => {\n\n        console.log(error);\n\n        // Send UIkit error notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> ${error}`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n\n      });\n\n    };\n\n  };\n\n  return (\n\n    <div className=\"uk-section\">\n\n      <div className=\"uk-container\">\n\n        { route === 'preferences' ? <h3>Actualiza tus preferencias</h3> : <h3>Actualiza tu Curriculum</h3>}\n\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin\">\n          <div className=\"uk-width-2-5 uk-flex uk-flex-center\">\n            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => setRoute('preferences')}>\n              Preferencias de consulta\n            </button>\n          </div>\n          <div className=\"uk-width-2-5 uk-flex uk-flex-center\">  \n            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => setRoute('curriculum')}>\n              Curriculum y Trayectoria\n            </button>\n          </div>\n        </div>\n\n        <div className=\"uk-width-1-1 uk-flex uk-flex-column uk-flex-center uk-flex-middle uk-margin-large\">\n\n            { route === 'preferences' ? (\n\n                preferences ? (\n                  <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-column uk-flex-center uk-flex-middle\" onSubmit={handleSubmit}>\n                    <div className=\"uk-margin-small uk-flex uk-flex-column\">\n                      <label className=\"uk-form-label\">Zonas para dar consulta:</label>\n                      <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid uk-flex-column uk-flex-top\">\n                        <label><input onChange={handleInput} className=\"uk-checkbox\" type=\"checkbox\" name=\"zones\" value=\"Polanco\" /> Polanco</label>\n                        <label><input onChange={handleInput} className=\"uk-checkbox\" type=\"checkbox\" name=\"zones\" value=\"Roma\" /> Roma</label>\n                        <label><input onChange={handleInput} className=\"uk-checkbox\" type=\"checkbox\" name=\"zones\" value=\"Condesa\" /> Condesa</label>\n                        <label><input onChange={handleInput} className=\"uk-checkbox\" type=\"checkbox\" name=\"zones\" value=\"Reforma\" /> Reforma</label>\n                        <label><input onChange={handleInput} className=\"uk-checkbox\" type=\"checkbox\" name=\"zones\" value=\"Col. del Valle\" /> Col. del Valle</label>\n                      </div>\n                    </div>\n        \n                    <div className=\"uk-margin-small uk-flex uk-flex-center uk-width-1-1\">\n                      <div className=\"uk-width-1-5\">\n                        <label className=\"uk-form-label\">Precio de consulta:</label>\n                      </div>\n                      <div className=\"uk-form-controls uk-width-4-5\">\n                        <input onChange={handleInput} name=\"price\" defaultValue={preferences.base_price} className=\"uk-input\" type=\"number\" />\n                      </div>\n                    </div>\n                  \n                    <div className=\"uk-margin\">\n                      <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n                        Actualizar Preferencias\n                      </button>\n                    </div>\n                  </form>\n                ) : <AppLoader />\n              ) : (\n\n                !curriculum ? <AppLoader /> : (\n                  <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-column uk-flex-center uk-flex-middle\" onSubmit={handleSubmit}>\n                    <p className=\"uk-text-primary\">Validaremos tu(s) cedula(s) profesional(es), por lo que es necesario cargar las imagenes en la plataforma</p>\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Biografia:</label>\n                      <div className=\"uk-form-controls\">\n                        <textarea onChange={handleInput} name=\"bio\" defaultValue={curriculum.bio} className=\"uk-textarea uk-form-width-large\" rows=\"6\" />\n                      </div>\n                    </div>\n        \n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Cedula Profesional Medicina General:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"med_license\" defaultValue={curriculum.med_license} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Universidad de Formacion en Medicina General:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"university\" defaultValue={curriculum.university} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Especialidad:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"specialty\" defaultValue={curriculum.specialty} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Cedula Profesional Especialidad:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"specialty_license\" defaultValue={curriculum.specialty_license} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Universidad de Formacion en Especialidad:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"specialty_univ\" defaultValue={curriculum.specialty_univ} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Subespecialidad:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"subspecialty\" defaultValue={curriculum.subspecialty} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Cedula Profesional Subespecialidad:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"subspecialty_license\" defaultValue={curriculum.subspecialty_license} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n\n                    <div className=\"uk-margin-small\">\n                      <label className=\"uk-form-label\">Universidad de Formacion en Subespecialidad:</label>\n                      <div className=\"uk-form-controls\">\n                        <input onChange={handleInput} name=\"subspecialty_univ\" defaultValue={curriculum.subspecialty_univ} className=\"uk-input uk-form-width-large\" type=\"text\" />\n                      </div>\n                    </div>\n                  \n                    <div className=\"uk-margin\">\n                      <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n                        Actualizar Curriculum\n                      </button>\n                    </div>\n                  </form>\n                )\n              )\n            }   \n        </div>\n      </div>\n\n    </div>\n\n  )\n\n};\n\nexport default Preferences;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/doctors' : 'http://localhost:3000/api/doctors';\n\n// Export get function to retrieve all doctors in database\nexport const getDoctors = (id = null) => {\n\n  if ( id ) return axios.get(`${base_url}/${id}`);\n\n  else return axios.get(`${base_url}`);\n\n};","import React from 'react';     // Import React, useEffect, useState and useContext hooks\nimport currencyFormatter from \"currency-formatter\";     // Import currency formatter for price display\nimport AppLoader from '../common/Loader';                           // Import AppLoader for custom loading spinner\n\nconst DoctorCard = ({ _id, first_name, last_name1, profile_picture, rating, is_verified, preference = {}, showDoctor }) => {\n\n  return (\n\n    <div className=\"uk-card uk-card-default uk-width-1-2@m\">\n\n      <div className=\"uk-card-header\">\n        <div className=\"uk-grid uk-grid-small uk-flex uk-flex-left uk-flex-middle\">\n          <div className=\"uk-width-1-5\">\n            <img className=\"uk-border-circle\" width={64} height={64} src={profile_picture} />\n          </div>\n          <div className=\"uk-width-3-5\">\n            <h3 className=\"uk-card-title uk-margin-remove-bottom\">{first_name} {last_name1}</h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"uk-card-body\">\n        <p>Especialidad: </p>\n        <p>Zonas de consulta: </p>\n        <p>{preference.zones ? preference.zones.map( zone => (`${zone}, `) ) : \"Sin informacion\"} </p>\n      </div>\n      <div className=\"uk-card-footer\">\n        <div className=\"uk-flex uk-flex uk-padding-remove uk-flex-around uk-flex-middle\">\n          <span className=\"uk-button uk-button-default uk-button-small uk-width-1-3 uk-text-center\">\n            {currencyFormatter.format(preference.base_price, { code: \"MXN\" })}\n          </span>\n          <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" onClick={(event) => showDoctor(event, _id)}>\n            Ver Mas\n          </button>\n        </div>\n      </div>\n\n    </div>\n\n  );\n\n};\n\nexport default DoctorCard;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/patients' : 'http://localhost:3000/api/patients';\n\n// Export get function to retrieve all doctors in database\nexport const getAllPatients = () => {\n\n  return axios.get(`${base_url}`);\n\n};","import React, { useEffect, useState, useContext, useRef } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\n\nimport { getAllPatients } from '../../services/patient-services';\n\nconst CalendarForm = ( { submit, handleChange, form, consultation = {} } ) => {\n\n  const { user, route, setRoute } = useContext(AppContext);    // Destructure user state variable\n  const [patients, setPatients] = useState([]);\n\n  useEffect( () => {\n\n    getAllPatients()\n    .then( res => {\n\n      const { patients } = res.data;\n      setPatients(patients);\n\n    });\n\n  }, [consultation]);\n\n  return (\n\n    user.usertype === 'Doctor' ? (\n      \n      <div className=\"uk-flex uk-flex-around uk-flex-wrap\">\n\n        <div className=\"uk-width-1-1 uk-flex uk-flex-between uk-margin-bottom\">\n\n          <div className=\"uk-width-1-5 uk-flex uk-flex-left\">\n            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => setRoute('schedule')}>\n              Atras\n            </button>\n          </div>\n\n          <div className=\"uk-width-1-5 uk-flex uk-flex-left\">\n            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => console.log(consultation)}>\n              state\n            </button>\n          </div>\n\n        </div>\n\n        <div className=\"uk-width-4-5 uk-flex uk-flex-wrap uk-flex-center uk-flex-middle\">\n\n          <div className=\"uk-width-1-1\">\n          <h3>Crea una consulta en tu agenda</h3>\n          </div>\n          \n        <div className=\"uk-width-1-1 uk-flex\">\n\n          <form className=\"uk-form-horizontal uk-width-1-1 uk-flex uk-flex-wrap\" onSubmit={submit}>\n          \n            <div className=\"uk-width-3-5 uk-margin uk-flex uk-flex-column uk-flex-start uk-flex-around\">\n\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Hora seleccionada:</label>\n                <div className=\"uk-form-controls\">\n                  <input onChange={handleChange} name=\"time\" value={consultation.dateStr ? consultation.dateStr.slice(11,16) : \"23:00\"} className=\"uk-input\" type=\"time\" />\n                </div>\n              </div>\n\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Fecha seleccionada:</label>\n                <div className=\"uk-form-controls\">\n                  <input onChange={handleChange} name=\"date2\" value={consultation.dateStr ? consultation.dateStr.slice(0,10) : \"2018-07-22\"} className=\"uk-input\" type=\"date\" />\n                  <input type=\"hidden\" onChange={handleChange} name=\"date\" value={consultation.dateStr ? consultation.dateStr.slice(0,10) : \"2018-07-22\"} />\n                </div>\n              </div>\n\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Paciente:</label>\n                <div className=\"uk-form-controls\">\n                  <textarea onChange={handleChange} name=\"none\" defaultValue=\"\" className=\"uk-select\" />\n                </div>\n              </div>\n\n            </div>\n\n            <div className=\"uk-width-2-5 uk-margin\">\n              <p>Todos los pacientes</p>\n                <div id=\"height30ovfw\" className=\"uk-container uk-width-5-6\">\n                  <ul className=\"uk-list uk-list-striped\">\n                        <li key={null}>\n                          <label className=\"uk-flex uk-flex-around uk-flex-middle\">\n                            <input onChange={handleChange} className=\"uk-radio\" type=\"radio\" name=\"patient\" value=\"5df837b4b1579b1646f36db2\" />\n                              Paciente no registrado\n                          </label>\n                        </li>\n                    { patients ? (\n                        patients.map( (patient, index) => \n                        <li key={patient._id}>\n                          <label className=\"uk-flex uk-flex-around uk-flex-middle\">\n                            <input onChange={handleChange} className=\"uk-radio\" type=\"radio\" name=\"patient\" value={patient._id} />\n                              {patient.first_name ? patient.first_name : patient.email}\n                          </label>\n                          <input onChange={handleChange} type=\"hidden\" name=\"patient\" value={patient._id} />\n                        </li> )\n                      ) : (\n                        <li>Cargando pacientes</li>\n                      ) }\n                  </ul>\n                </div>\n            </div>\n\n            <div className=\"uk-width-1-1\">\n              <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n                Crear consulta\n              </button>\n            </div>\n\n          </form>\n\n          </div>\n\n        </div>\n\n      </div>\n    ) : (\n      <div className=\"uk-width-4-5 uk-flex uk-flex-wrap uk-flex-center\">\n\n          <div className=\"uk-width-1-1\">\n          <h3>Solicita consulta al doctor</h3>\n          </div>\n          \n        <div className=\"uk-width-1-1 uk-flex\">\n\n          <form className=\"uk-form-horizontal uk-width-1-1 uk-flex uk-flex-wrap\" onSubmit={submit}>\n\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Hora seleccionada:</label>\n                <div className=\"uk-form-controls\">\n                  <input onChange={handleChange} name=\"time\" value={consultation.dateStr ? consultation.dateStr.slice(11,16) : \"23:00\"} className=\"uk-input\" type=\"time\" />\n                </div>\n              </div>\n\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Fecha seleccionada:</label>\n                <div className=\"uk-form-controls\">\n                  <input onChange={handleChange} name=\"date2\" value={consultation.dateStr ? consultation.dateStr.slice(0,10) : \"2018-07-22\"} className=\"uk-input\" type=\"date\" />\n                  <input type=\"hidden\" onChange={handleChange} name=\"date\" value={consultation.dateStr ? consultation.dateStr.slice(0,10) : \"2018-07-22\"} />\n                </div>\n              </div>\n\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Doctor:</label>\n                <div className=\"uk-form-controls\">\n                  <textarea onChange={handleChange} name=\"none\" defaultValue=\"\" className=\"uk-select\" />\n                </div>\n              </div>\n\n            <div className=\"uk-width-1-1\">\n              <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n                Crear consulta\n              </button>\n            </div>\n\n          </form>\n\n        </div>\n      </div>\n    )\n  )\n\n};\n\nexport default CalendarForm;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/consultations' : 'http://localhost:3000/api/consultations';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getDoctorConsultations = (doctorID = null) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  if ( !doctorID ) {\n\n    return axios.get(`${base_url}/doctor`, {\n      headers: {\n        Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      }\n    });\n\n  } else {\n\n    return axios.get(`${base_url}/patient/${doctorID}`, {\n      headers: {\n        Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      }\n    });\n\n  }\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createDoctorConsultation = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/doctor`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createUserConsultation = (data, doctorID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/patient/${doctorID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPatientConsultations = (patientID = null) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  if ( !patientID ) {\n\n    return axios.get(`${base_url}/patient`, {\n      headers: {\n        Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      }\n    });\n\n  } else {\n\n    return axios.get(`${base_url}/doctor/${patientID}`, {\n      headers: {\n        Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      }\n    });\n\n  }\n\n};\n\nexport const getConsultationInfo = (consultationID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${consultationID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editConsultation = (consultationID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${consultationID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport esLocale from '@fullcalendar/core/locales/es';\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/core/main.js';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/daygrid/main.js';\nimport '@fullcalendar/timegrid/main.css';\nimport '@fullcalendar/timegrid/main.js';\nimport '@fullcalendar/interaction/main.js';\n\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport CalendarForm from './CalendarForm';\n\nimport { getDoctorConsultations, createDoctorConsultation, createUserConsultation } from '../../services/consultation-services'\n\nconst Calendar = ({ usertype, doctorID = null }) => {\n\n  const calendarPlugins = [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin];\n\n  // Destructure form state variable, handleInput functions for form state manipulation\n  const { form, setForm, handleInput } = useForm({});\n  // Destructure user and route state variables, as well as setRoute to update route state variable\n  const { user, route, setRoute } = useContext(AppContext);\n  // Declare facilities state variable and setFacilities function to update the facilities state variable\n  const [consultations, setConsultations] = useState([]);\n  // Declare single facility state variable and setFacility function to update the single facility state variable\n  const [consultation, setConsultation] = useState({});\n\n  let [events, setEvents] = useState({});\n  let [confirmation, setConfirmation] = useState(false);\n\n  const { push } = useHistory();\n\n  useEffect( () => {\n\n    if ( user.usertype === 'Doctor' ) {\n\n      getDoctorConsultations()\n      .then( res => {\n\n        const { consultations } = res.data;\n        setConsultations(consultations);\n        setEvents(consultations);\n\n      })\n    \n    } else if ( user.usertype === 'Patient' ) {\n\n      getDoctorConsultations(doctorID)\n      .then( res => {\n\n        const { consultations } = res.data;\n        setConsultations(consultations);\n        setEvents(consultations);\n\n      })\n\n    }\n\n  }, [route]);\n\n  const handleDateClick = (arg) => {\n\n    setEvents(\n      events.concat({\n        title: 'New Event',\n        start: arg.date,\n        allDay: arg.allDay\n      })\n    );\n\n    if ( user.usertype === 'Doctor' ) {\n\n      setRoute('confirmation');\n      setForm({date: moment(arg.date).local(), doctor: user._id})\n\n      setConsultation(arg);\n\n    } else if ( user.usertype === 'Patient' ) {\n\n      setConfirmation(true);\n      setForm({date: moment(arg.date).local(), patient: user._id})\n      setConsultation(arg);\n\n    }\n\n  }\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();             // Prevent page reloading after submit action\n\n    if ( user.usertype === 'Doctor' ) {\n\n      createDoctorConsultation(form)\n      .then( res => {\n\n        const { consultation } = res.data;\n        setRoute('schedule');\n\n      })\n      .catch( error => {\n        \n        console.log(error);\n        \n      })\n\n    } else if ( user.usertype === 'Patient' ) {\n\n      createUserConsultation(form, doctorID)\n      .then( res => {\n\n        const { consultation } = res.data;\n        push('/home');\n        \n\n      })\n      .catch( error => {\n        \n        console.log(error);\n        \n      })\n\n    }\n    \n    \n  }\n\n  return (\n    usertype === 'Doctor' ? (\n\n      <div className=\"uk-section uk-padding-small\">\n\n        <div className=\"uk-container\">\n\n          { route === 'schedule' ? (\n              <div className=\"uk-width-1-1\">\n                <FullCalendar \n                  defaultView=\"timeGridWeek\" \n                  header={{\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n                  }}\n                  locale={esLocale}\n                  minTime={\"06:00:00\"} \n                  // maxTime={\"19:00:00\"} \n                  plugins={ calendarPlugins } \n                  events={events} \n                  dateClick={ handleDateClick }\n                />\n              </div>\n            ) : (\n              <CalendarForm submit={handleSubmit} handleChange={handleInput} form={form} consultation={consultation} />\n            )\n          }          \n        </div>\n        \n      </div>\n    ) : (\n\n        <div className=\"uk-container\">\n\n          { route === 'schedule' ? (\n              <div className=\"uk-width-1-1\">\n\n                { !confirmation ? \n\n                    <FullCalendar \n                      defaultView=\"timeGridWeek\" \n                      header={{\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'timeGridWeek,timeGridDay'\n                      }}\n                      locale={esLocale}\n                      minTime={\"06:00:00\"} \n                      // maxTime={\"19:00:00\"} \n                      plugins={ calendarPlugins } \n                      events={events} \n                      dateClick={ handleDateClick }\n                    />\n                  : <CalendarForm submit={handleSubmit} handleChange={handleInput} form={form} consultation={consultation} />\n                }\n              </div>\n            ) : route === 'confirmation' ? (\n              <h4>Confirmation form</h4>\n            ) : <h4>LOL</h4>\n          }\n          \n          \n        </div>\n        \n    )\n  )\n\n}\n\nexport default Calendar;","import React, { useContext, useState, useEffect } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport currencyFormatter from 'currency-formatter';                 // Import currency formatter for price display\n//import DoctorForm from './DoctorForm';                          // Import FacilityForm react component\nimport Calendar from '../schedule/Calendar'\n\nimport { getCurriculum, getDoctorCurriculum } from '../../services/profile-services';\n\n//\nconst DoctorInfo = ({ doctor, preference }) => {\n\n  const history = useHistory();              // declare an instance of useHistory hook to redirect user according to needs\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  // const { form, handleInput, handleFileInput } = useForm();\n  // Destructure user state variable\n  const { user, route, setRoute } = useContext(AppContext);\n  const [ curriculum, setCurriculum ] = useState({});   // Declare preferences state variable and setPreferences method to update preferences\n\n  useEffect( () => {\n\n    if ( route === 'curriculum' ) {\n\n      getDoctorCurriculum(doctor._id)\n      .then( res => {\n\n        const { curriculum } = res.data;\n        setCurriculum(curriculum);\n        console.log(curriculum);\n\n      })\n    }\n\n  }, [route]);\n\n  const goBack = () => {\n    route === 'showDoctor' ? setRoute('doctors') : setRoute('showDoctor');\n  }\n\n  return (\n    <div className=\"uk-flex uk-flex-around uk-flex-wrap\">\n      <div className=\"uk-width-1-1 uk-flex uk-flex-between uk-margin-bottom\">\n        <div className=\"uk-width-1-5 uk-flex uk-flex-left\">\n          <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={goBack}>\n            Atras\n          </button>\n        </div>\n        <div className=\"uk-width-4-5 uk-flex uk-flex-center\">\n          <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => setRoute('schedule')}>\n            Ver Calendario\n          </button>\n          <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => setRoute('curriculum')}>\n            Ver Curriculum\n          </button>\n        </div>\n      </div>\n\n      <div className=\"uk-width-1-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center height30 uk-flex-middle\">\n          <img src={doctor.profile_picture} height=\"160px\" width=\"160px\" alt=\"Doctor's profile picture\" className=\"uk-img\" />\n        </div>\n\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center height10 uk-flex-middle\">\n          <h3 className=\"uk-margin-remove\">Dr. {doctor.first_name} {doctor.last_name1} {doctor.last_name2}</h3>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Especialidad:</label>\n          <div className=\"uk-form-controls\">\n          <h4>Especialidad</h4>\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Zonas de consulta:</label>\n          <div id=\"geocoder-container\" className=\"uk-form-controls\">\n            <h4>{preference ?  (preference.zones ? preference.zones.map( zone => (`${zone}, `) ) : 'Cargando') : 'Sin informacion'} </h4>\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Precio por consulta:</label>\n          <div className=\"uk-form-controls\">      \n            <h4>\n              {preference ? currencyFormatter.format(preference.base_price, { code: \"MXN\" }) : \"Cargando\"}\n            </h4>\n          </div>\n        </div>\n\n      </div>\n\n      {\n        route !== 'curriculum' ? (\n\n           route === 'schedule' ? (\n            <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n              <Calendar usertype={user.usertype} doctorID={doctor._id} />\n            </div>\n            ) : (\n            <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n              <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={(event) => setRoute('schedule')}>\n                Cargar Calendario del Doctor\n              </button>\n            </div>\n            )\n          \n\n          \n        ) : (\n\n          <div className=\"uk-width-4-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Biografia:</label>\n              <div className=\"uk-form-controls\">\n                <textarea name=\"bio\" defaultValue={curriculum ? curriculum.bio : \"Cargando\"} className=\"uk-textarea uk-form-width-large\" rows=\"6\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Cedula Profesional Medicina General:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"med_license\" defaultValue={curriculum ? curriculum.med_license : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Universidad de Formacion en Medicina General:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"university\" defaultValue={curriculum ? curriculum.university : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Especialidad:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"specialty\" defaultValue={curriculum ? curriculum.specialty : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Cedula Profesional Especialidad:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"specialty_license\" defaultValue={curriculum ? curriculum.specialty_license : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Universidad de Formacion en Especialidad:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"specialty_univ\" defaultValue={curriculum ? curriculum.specialty_univ : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Subespecialidad:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"subspecialty\" defaultValue={curriculum ? curriculum.subspecialty : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Cedula Profesional Subespecialidad:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"subspecialty_license\" defaultValue={curriculum ? curriculum.subspecialty_license : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n            <div className=\"uk-margin-small\">\n              <label className=\"uk-form-label\">Universidad de Formacion en Subespecialidad:</label>\n              <div className=\"uk-form-controls\">\n                <input name=\"subspecialty_univ\" defaultValue={curriculum ? curriculum.subspecialty_univ : \"Cargando\"} className=\"uk-input uk-form-width-large\" type=\"text\" />\n              </div>\n            </div>\n\n        </div>\n\n        )\n      }\n\n      \n      \n    </div>\n  )\n\n};\n\nexport default DoctorInfo;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\n// Import API services (CRUD operations) from services file\nimport { getDoctors } from '../../services/doctor-services';\n\nimport DoctorCard from './DoctorCard';\nimport DoctorInfo from './DoctorInfo';\n\nconst Doctors = () => {\n\n  // Destructure user and route state variables, as well as setRoute to update route state variable\n  const { user, route, setRoute } = useContext(AppContext);\n  // Declare doctors state variable and setDoctors function to update the doctors state variable\n  const [doctors, setDoctors] = useState([]);\n  const [doctor, setDoctor] = useState({});\n  const [preference, setPreference] = useState({});\n\n  useEffect( () => {\n\n    if ( route === 'doctors' ) {\n      \n      getDoctors()\n      .then( res => {\n\n        const { doctors } = res.data;\n\n        console.log(doctors);\n        setDoctors(doctors);\n\n      });\n\n    } else if ( route === 'showDoctor') {\n\n      getDoctors(doctor)\n      .then( res => {\n\n        const { doctor } = res.data;\n\n        setDoctor(doctor);\n        setPreference(doctor.preference);\n\n      })\n\n    }\n\n  }, [route]);\n\n  // Declare function to set route to facility edit or facility info\n  const showDoctor = (event, id) => {\n    \n    event.preventDefault();\n    setDoctor(id);\n\n    if ( route === 'doctors' ) setRoute('showDoctor');\n\n  }\n\n  return (\n\n    <div className=\"uk-section\">\n\n      <div className=\"uk-container\">\n\n        { route === 'doctors' ? (\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column uk-flex-middle\">\n              <h3>Busca doctores</h3>\n              <div uk-grid=\"true\" className=\"uk-width-4-5 uk-child-width-1-3 uk-grid-match uk-grid-medium\">\n                { doctors.map( (doctor, index) => ( <DoctorCard key={index} {...doctor} showDoctor={showDoctor} /> ) ) }\n              </div>\n            </div>\n          ) : (\n            <DoctorInfo doctor={doctor} preference={preference} />\n          ) }\n\n        \n      </div>\n\n    </div>\n\n  );\n\n};\n\nexport default Doctors;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport img_doctor from \"../../assets/images/landing/doctor.svg\"\nimport img_firstaid from \"../../assets/images/landing/first-aid-kit.svg\"\nimport img_hospital from \"../../assets/images/landing/hospital.svg\"\nimport img_medical_file from \"../../assets/images/landing/medical-file.svg\"\nimport img_prescription from \"../../assets/images/landing/prescription.svg\"\nimport img_vademecum from \"../../assets/images/landing/vademecum.svg\"\n\nconst DoctorLanding = () => {\n\n  return (\n    <div className=\"uk-section uk-flex uk-flex-middle uk-flex-center\">\n      <div className=\"uk-width-1-3 \" uk-slider=\"autoplay: true; autoplay-interval: 3000\">\n        <ul className=\"uk-slider-items uk-child-width-3-5\">\n          \n          <li>\n            <img src={img_doctor} width=\"320px\" height=\"320px\" alt=\"\" />\n          </li>\n          <li>\n            <img src={img_firstaid} width=\"320px\" height=\"320px\" alt=\"\" />\n          </li>\n          <li>\n            <img src={img_hospital} width=\"320px\" height=\"320px\" alt=\"\" />\n          </li>\n          <li>\n            <img src={img_medical_file} width=\"320px\" height=\"320px\" alt=\"\" />\n          </li>\n          <li>\n            <img src={img_prescription} width=\"320px\" height=\"320px\" alt=\"\" />\n          </li>\n          <li>\n            <img src={img_vademecum} width=\"320px\" height=\"320px\" alt=\"\" />\n          </li>\n        </ul>\n      </div>\n      <div className=\"uk-margin-bottom uk-width-1-3 uk-height-1-1 uk-flex uk-flex uk-flex-column uk-flex-center\">\n        <h2>Encuentra doctores, consultorios y pacientes... ¡Fácilmente!</h2>\n        <h3>Crea tu perfil, escoge tus consultorios  y empieza a dar consulta</h3>\n        <div className=\"uk-margin\">\n          <NavLink to=\"/doctor-login\">\n            <button className=\"uk-button uk-button-danger uk-border-pill\">Busco doctor</button>\n          </NavLink>\n        </div>\n        <h3>Crea tu perfil, escoge tus consultorios  y empieza a dar consulta</h3>\n        <div className=\"uk-margin\">\n          <NavLink to=\"/doctor-login\">\n            <button className=\"uk-button uk-button-default uk-border-pill\">Soy doctor</button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DoctorLanding;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../../AppContext';                   // Import AppContext to use created context\nimport useForm from '../../../hooks/useForm';                       // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\n// Import API services (CRUD operations) from services file\n//import { getUserFacilities, getAllFacilities, createFacility } from '../../services/facility-services';\n\nimport Searchbar from '../../common/Searchbar';\n//import FacilityForm from './FacilityForm';                          // Import FacilityForm react component\n//import FacilityCard from './FacilityCard';                          // Import FacilityCard react component\n\nimport avatar from '../../../assets/images/avatars/user-avatar.png'\n\n// Declare Facility functional component\nconst Patients = () => {\n\n  // Destructure user state variable\n  const { user, route, setRoute } = useContext(AppContext);\n  // Declare facilities state variable and setFacilities function to update the facilities state variable\n  const [facilities, setFacilities] = useState([]);\n\n  const { push } = useHistory();              // Destructure push method from useHistory to \"redirect\" user\n\n  return (\n\n    <div className=\"uk-section uk-padding-remove-top\">\n\n      <div className=\"uk-container uk-flex uk-flex-column uk-flex-middle\">\n\n        <div id=\"height35\" className=\"uk-width-1-1 uk-flex uk-flex-middle\">\n          <div uk-grid=\"true\" className=\"uk-margin uk-width-1-1 uk-child-width-1-6 uk-grid-match uk-grid-small uk-flex uk-flex-around\">\n            <div className=\"uk-card uk-card-default\">\n              <div className=\"uk-card-header uk-width-1-1\">\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n                    <div className=\"uk-width-expand\">\n                      <h3 className=\"uk-card-title uk-margin-remove-bottom\">Name</h3>\n                      <p className=\"uk-text-meta uk-margin-remove-top\"><time dateTime=\"2016-04-01T19:00\">April 01, 2016</time></p>\n                    </div>\n                </div>\n              </div>\n              <div className=\"uk-card-footer uk-padding-small\">\n                <button className=\"uk-button uk-button-small uk-button-primary uk-border-pill\">Ver</button>\n              </div>\n            </div>\n            <div className=\"uk-card uk-card-default\">\n              <div className=\"uk-card-header\">\n                <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n                  <div className=\"uk-width-expand\">\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"uk-card-title uk-margin-remove-bottom\">Name</h3>\n\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-meta uk-margin-remove-top\"><time dateTime=\"2016-04-01T19:00\">April 01, 2016</time></p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"uk-card-footer uk-padding-small\">\n                <button className=\"uk-button uk-button-small uk-button-primary uk-border-pill\">Ver</button>\n              </div>\n            </div>\n            <div className=\"uk-card uk-card-default\">\n              <div className=\"uk-card-header\">\n\t\t\t\t\t\t\t\t<div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n\t\t\t\t\t\t\t\t\t<div className=\"uk-width-expand\">\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"uk-card-title uk-margin-remove-bottom\">Name</h3>\n\t\t\t\t\t\t\t\t\t\t<p className=\"uk-text-meta uk-margin-remove-top\"><time dateTime=\"2016-04-01T19:00\">April 01, 2016</time></p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n              </div>\n              <div className=\"uk-card-footer uk-padding-small\">\n                  <button className=\"uk-button uk-button-small uk-button-primary uk-border-pill\">Ver</button>\n              </div>\n            </div>\n            <div className=\"uk-card uk-card-default\">\n              <div className=\"uk-card-header\">\n                  <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n                      <div className=\"uk-width-expand\">\n                          <h3 className=\"uk-card-title uk-margin-remove-bottom\">Name</h3>\n                          <p className=\"uk-text-meta uk-margin-remove-top\"><time dateTime=\"2016-04-01T19:00\">April 01, 2016</time></p>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"uk-card-footer uk-padding-small\">\n                  <button className=\"uk-button uk-button-small uk-button-primary uk-border-pill\">Ver</button>\n              </div>\n            </div>\n            <div className=\"uk-card uk-card-default\">\n              <div className=\"uk-card-header\">\n                  <div className=\"uk-grid-small uk-flex-middle\" uk-grid=\"true\">\n                      <div className=\"uk-width-expand\">\n                          <h3 className=\"uk-card-title uk-margin-remove-bottom\">Name</h3>\n                          <p className=\"uk-text-meta uk-margin-remove-top\"><time dateTime=\"2016-04-01T19:00\">April 01, 2016</time></p>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"uk-card-footer uk-padding-small\">\n                  <button className=\"uk-button uk-button-small uk-button-primary uk-border-pill\">Ver</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"height10\" className=\"uk-width-1-1 uk-flex uk-flex-middle\">\n            <Searchbar />\n        </div>\n\n        <div id=\"height30\" className=\"uk-width-1-1 uk-flex uk-margin\">\n\t\t\t\t\t<div className=\"uk-width-1-2\">\n\t\t\t\t\t\t<h4>Mis Pacientes</h4>\n\t\t\t\t\t\t<div id=\"height30ovfw\" className=\"uk-container\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t\t<li>Paciente</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"height30\"\t className=\"uk-width-1-2\">\n\t\t\t\t\t\t<h4>Aqui va la ficha de paciente</h4>\n\t\t\t\t\t</div>\n        </div>\n      </div>\n\n    </div>\n\n  );\n\n}\n\nexport default Patients;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/facilities' : 'http://localhost:3000/api/facilities';\n\n// Export get function to retrieve all facilities owned by the current logged in user\nexport const getUserFacilities = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n  \n}\n\n// Export get function to retrieve all facilities in database\nexport const getAllFacilities = () => {\n\n  return axios.get(`${base_url}/all`);\n  \n}\n\n// Export get function to retrieve information of a particular facility\nexport const getFacilityInfo = (id) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${id}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n  \n}\n\n// Export create facility function, which receives data as parameters to enable facility creation\nexport const createFacility = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/new`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};\n\n// Export update function, which receives data as parameters to enable facility edition\nexport const updateFacility = (data, id) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/${id}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};\n\n// Export delete function, which receives facility id as parameter to search in database and delete it\nexport const deleteFacility = (id) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.delete(`${base_url}/${id}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};","import React from 'react';     // Import React, useEffect, useState and useContext hooks\nimport currencyFormatter from \"currency-formatter\";     // Import currency formatter for price display\n\nconst FacilityCard = ({ _id, title, images = [], description, price, owner, preview, showFacility, edit }) => {\n\n  if ( !preview ) {\n  \n    return (\n      \n      <div className=\"uk-card uk-card-default uk-padding-remove\">\n        \n        <div className=\"uk-card-media-top uk-padding-remove\">\n          <div\n            className=\"uk-position-relative uk-visible-toggle uk-light\"\n            tabIndex=\"-1\"\n            uk-slideshow=\"true\"\n          >\n            <ul className=\"uk-slideshow-items\">\n              {images.map((image, index) => (\n                <li key={index}>\n                  <img src={image} alt=\"\" uk-cover=\"true\" />\n                </li>\n              ))}\n            </ul>\n\n            <a\n              className=\"uk-position-center-left uk-position-small uk-hidden-hover\"\n              href=\"#\"\n              uk-slidenav-previous=\"true\"\n              uk-slideshow-item=\"previous\"\n            ></a>\n            <a\n              className=\"uk-position-center-right uk-position-small uk-hidden-hover\"\n              href=\"#\"\n              uk-slidenav-next=\"true\"\n              uk-slideshow-item=\"next\"\n            ></a>\n          </div>\n        </div>\n        <div className=\"uk-card-body uk-padding-small\">\n          <p>{title}</p>\n          <hr />\n          <div className=\"uk-flex uk-flex uk-padding-remove uk-flex-around uk-flex-middle\">\n            <span className=\"uk-button uk-button-default uk-button-small uk-width-1-3 uk-text-center\">\n              {currencyFormatter.format(price, { code: \"MXN\" })}\n            </span>\n            {edit ? \n              <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" onClick={(event) => showFacility(event, _id, edit)}>\n                Editar\n              </button>\n              :\n              <button className=\"uk-button uk-button-primary uk-button-small uk-border-pill\" onClick={(event) => showFacility(event, _id, edit)}>\n                Ver Mas\n              </button>\n            }\n            \n          </div>\n        </div>\n      </div>\n    );\n\n  } else {\n    \n    return (\n      <div className=\"uk-card uk-card-default uk-padding-remove uk-width-2-3\">\n        <div className=\"uk-card-media-top uk-padding-remove\">\n          <div\n            className=\"uk-position-relative uk-visible-toggle uk-light\"\n            tabIndex=\"-1\"\n            uk-slideshow=\"true\"\n          >\n            <ul className=\"uk-slideshow-items\">\n              {images.map((image, index) => (\n                <li key={index}>\n                  <img src={image} alt=\"\" uk-cover=\"true\" />\n                </li>\n              ))}\n            </ul>\n\n            <a\n              className=\"uk-position-center-left uk-position-small uk-hidden-hover\"\n              href=\"#\"\n              uk-slidenav-previous=\"true\"\n              uk-slideshow-item=\"previous\"\n            ></a>\n            <a\n              className=\"uk-position-center-right uk-position-small uk-hidden-hover\"\n              href=\"#\"\n              uk-slidenav-next=\"true\"\n              uk-slideshow-item=\"next\"\n            ></a>\n          </div>\n        </div>\n        <div className=\"uk-card-body uk-padding-small\">\n          <p>{title}</p>\n          <hr />\n          <div className=\"uk-flex uk-flex-column uk-padding-remove uk-flex-middle\">\n            <span className=\"uk-badge uk-width-1-2 uk-text-center\">\n              {currencyFormatter.format(price, { code: \"MXN\" })}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n\n};\n\nexport default FacilityCard;","import React, { useEffect, useRef, useState } from 'react';\n//import MapGL, { GeolocateControl } from 'react-map-gl';\n//import DeckGL, { GeoJsonLayer } from 'deck.gl';\n//import Geocoder from \"react-map-gl-geocoder\";\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nconst mapboxTOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n\nconst Map = ({ width = '60vw', height = '60vh', form, facility = null, facilities = null }) => {\n\n  const [map, setMap] = useState(null);\n\n  const mapContainer = useRef(null);\n\n  const styles = {\n    width: width,\n    height: height,\n    position: 'absolute'\n  };\n\n  \n\n\n  mapboxgl.accessToken = mapboxTOKEN;\n\n  const initializeMap = ({ setMap, mapContainer }) => {\n\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-99.168884, 19.415521],\n      zoom: 2\n    });\n\n    map.on( 'load', () => {\n      setMap(map);\n      map.resize();\n    });\n\n    \n    map.addControl(\n      new mapboxgl.GeolocateControl({\n        positionOptions: { enableHighAccuracy: true },\n        trackUserLocation: true\n      })\n    );\n    \n    map.addControl(geocoder);\n    map.addControl(new mapboxgl.NavigationControl());\n\n    if ( facility ) {\n  \n      let el = document.createElement('div');\n      el.className = 'marker';\n    \n      // make a marker for each feature and add to the map\n      new mapboxgl.Marker(el)\n        .setLngLat(facility.coordinates)\n        .addTo(map);\n  \n    };\n\n    if ( facilities ) {\n\n      facilities.forEach(function(marker) {\n  \n        // create a HTML element for each feature\n        let el = document.createElement('div');\n        el.className = 'marker';\n      \n        // make a marker for each feature and add to the map\n        new mapboxgl.Marker(el)\n          .setLngLat(marker.coordinates)\n          .addTo(map);\n          \n      });\n\n    }\n    \n\n  };\n  \n  useEffect( () => {\n\n    if ( !map ) initializeMap({ setMap, mapContainer });\n\n    if ( map ) {\n\n      map.on( 'move', () => { \n      \n        setMap(map);\n        //console.log(map);\n        //map.resize();\n\n      });\n\n    }\n  }, [map, form]);\n\n  \n\n\n  const geocoder = new MapboxGeocoder({\n    accessToken: mapboxgl.accessToken,\n    mapboxgl: mapboxgl\n  });\n\n  geocoder.on(\"result\", res => {\n    console.log(res.result)\n    const { geometry: { coordinates }, place_name } = res.result\n    \n    form.coordinates = coordinates\n    form.address = place_name\n\n    console.log(form);\n  });\n  \n  return <div ref={el => (mapContainer.current = el)} style={styles} />;\n\n};\n\nexport default Map;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport { NavLink } from 'react-router-dom';                         // Import NavLink for \"navigation\"\nimport FacilityCard from './FacilityCard';                          // Import FacilityCard react component\nimport Map from '../common/Mapbox';                                 // Import Map react component\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\n\n// Declare FacilityForm functional component, receives action variable for conditional rendering,\n// email, password and confpassword variables from form state variable, and submit and handleChange functions\nconst FacilityForm = ( { submit, handleChange, handleFileInput, form, facility = {}, edit = false, preview = false } ) => {\n\n  \n  // Declare formatted images state variable and set formatted images function to update the images state variable\n  const [ formattedImages, setFormattedImages ] = useState([]);\n\n  const { user, setRoute } = useContext(AppContext);    // Destructure user state variable\n  const { push } = useHistory();              // Destructure push method from useHistory to \"redirect\" user\n\n  // Update component when form state variable is modified\n  useEffect( () => {\n\n    const { images } = form;  // Destructure images from form state variable\n\n    getDataUrl(images);       // Call function to obtain url to display images in Facility \"card preview\"\n\n    if ( !user._id ) {        // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');  // If not logged in, \"redirect\" user to login\n\n    };\n\n  }, [form.images, form.address] );\n  \n  // Declare function to obtain url to display images in Facility \"card preview\", from files parameter\n  const getDataUrl = files => {\n\n    if (!files) return;                 // In case that no files are present, return\n\n    // Obtain image url using FileReader and using formatted images state variable to update card preview\n    const dataUrls = Array.from(files).map(file => {\n\n      const reader = new FileReader();  // Declare reader as new instance of FileReader class\n      reader.readAsDataURL(file);       // Read \"blob\"/file contents and set a URL after reading the file\n      reader.onload = () => {           // Trigger each time the reading operation is successfully completed\n        setFormattedImages(prevState => [...prevState, reader.result]); // Obtain URL from reader.result\n      };\n\n    });\n\n    return dataUrls;                    // Return URLs from files sent as parameters\n\n  };\n\n  const deleteFacility = () => setRoute('delete');  // Declare function tu set route to delete\n\n  return (\n\n    <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-center uk-flex-middle\" onSubmit={ !edit ? submit : (event) => submit(event, edit, facility._id )}>\n\n      <div className=\"uk-width-2-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n\n        { edit ? <h3>Edita tu consultorio</h3> : <h3>Publica un consultorio en renta</h3> }\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Titulo:</label>\n          <div className=\"uk-form-controls\">\n            <input onChange={handleChange} name=\"title\" defaultValue={facility.title} className=\"uk-input\" type=\"text\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Descripcion:</label>\n          <div className=\"uk-form-controls\">\n            <textarea onChange={handleChange} name=\"description\" defaultValue={facility.description} className=\"uk-textarea\" rows=\"5\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Direccion:</label>\n          <div id=\"geocoder-container\" className=\"uk-form-controls\">\n            <input onChange={handleChange} name=\"address\" defaultValue={facility.address} value={form.address ? form.address : ''} className=\"uk-input\" type=\"text\" />\n            <button onClick={handleChange} id=\"toggle-map\" className=\"uk-button uk-button-default uk-button-small\" type=\"button\">\n              { !form.showMap ? \"Mostrar mapa\" : \"Guardar direccion\" }\n            </button>\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Precio:</label>\n          <div className=\"uk-form-controls\">\n            <input onChange={handleChange} name=\"price\" defaultValue={facility.price} className=\"uk-input\" type=\"number\" />\n          </div>\n        </div>\n\n        <div className=\"js-upload uk-margin\" uk-form-custom=\"true\">\n          <input onChange={handleFileInput} name=\"images\" type=\"file\" multiple />\n          <button className=\"uk-button uk-button-default uk-button-small\" type=\"button\">Agregar Imagenes</button>\n        </div>   \n      \n      </div>\n\n      { form.showMap ? \n        <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n          <Map form={form} width={'35%'} height={'60%'}/> \n        </div> : \n        <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n          <div className={ preview ? \"uk-margin-small uk-width-2-3 uk-flex uk-flex-center\" : \"uk-margin-small\"}>\n            <FacilityCard {...form} {...facility} images={formattedImages.length > 0 ? formattedImages : facility.images} preview={preview} />\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">\n              <input onChange={handleChange} className=\"uk-checkbox\" type=\"checkbox\" name=\"is_med_facility\" value=\"true\"/>\n                Este consultorio cuenta con los requerimientos minimos de un consultorio\n            </label>\n          </div>\n\n          { edit ? (\n            <div className=\"uk-margin-small uk-flex uk-flex-column uk-flex-middle uk-flex-center\">\n              <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n                Actualizar <span className=\"uk-margin-small-left\" uk-icon=\"refresh\"></span>\n              </button>\n              <button onClick={(event) => deleteFacility(event, facility._id)} className=\"uk-button uk-button-default uk-button-small uk-margin-small\">\n                Eliminar <span className=\"uk-margin-small-left\" uk-icon=\"trash\"></span>\n              </button>\n            </div>\n            ) : (\n              <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n                Publicar\n              </button>\n            )}\n          \n        </div>\n      }\n    \n    </form>\n  );\n}\nexport default FacilityForm;","import React, { useContext, useEffect, useState } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport currencyFormatter from \"currency-formatter\";                 // Import currency formatter for price display\nimport FacilityForm from './FacilityForm';                          // Import FacilityForm react component\nimport FacilityCard from './FacilityCard';                          // Import FacilityCard react component\nimport Map from '../common/Mapbox';                                 // Import Map react component\n\nimport { getFacilityInfo } from '../../services/facility-services';\n\nconst FacilityInfo = ({ facility, edit, showMap, toggleFavorite, favorites = [], isFavorite = false }) => {\n\n  const history = useHistory();              // declare an instance of useHistory hook to redirect user according to needs\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  // const { form, handleInput, handleFileInput } = useForm();\n  // Destructure user state variable\n  const { user, route, setRoute } = useContext(AppContext);\n  const [viewMap, setViewMap] = useState(false);\n\n  useEffect( () => {\n\n  }, [route]);\n\n  const goBack = () => {\n    edit ? setRoute('myFacilities') : setRoute('search');\n  }\n\n  for (let i = 0; i < favorites.length; i++ ) {\n\n    if ( favorites[i] === facility._id ) {\n      \n      isFavorite = true;\n      i = favorites.length;\n\n     } else isFavorite = false;\n\n  }\n\n  const toggleMap = () => {\n    \n    showMap = !showMap;\n    setViewMap(showMap)\n    console.log(showMap);\n  }\n\n  return (\n\n      <div className=\"uk-flex uk-flex-center\">\n\n        <div className=\"uk-width-2-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n\n          <div className=\"uk-width-1-1 uk-flex uk-flex-center height10 uk-flex-middle\">\n            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={goBack}>\n              Atras\n            </button>\n            <h3 className=\"uk-margin-remove\">{facility.title}</h3>\n          </div>\n          \n          \n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Descripcion:</label>\n            <div className=\"uk-form-controls\">\n            <p>{facility.description}</p>\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Direccion:</label>\n            <div id=\"geocoder-container\" className=\"uk-form-controls\">\n              <p>{facility.address}</p>\n              <button onClick={toggleMap} id=\"toggle-map\" className=\"uk-button uk-button-default uk-button-small\" type=\"button\">\n                { !viewMap ? \"Mostrar mapa\" : \"Ver imagenes\" }\n              </button>\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Precio:</label>\n            <div className=\"uk-form-controls\">\n            {currencyFormatter.format(facility.price, { code: \"MXN\" })}\n            </div>\n          </div>\n\n        </div>\n\n      \n\n      { viewMap ? \n        <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n          <Map form={facility} width={'35%'} height={'60%'} facility={facility}/> \n        </div> : \n        <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n          <div className=\"uk-margin-small uk-width-2-3 uk-flex uk-flex-center\">\n            <FacilityCard {...facility} images={facility.images} preview={true} />\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">\n              { facility.is_med_facility ? \n                <p>Este consultorio cuenta con los requerimientos minimos de un consultorio</p> \n                : \n                <p>Este espacio no cuenta con los requerimientos minimos de un consultorio</p>\n              }\n            </label>\n          </div>\n\n          { user._id ? \n\n            isFavorite ? (\n              <button onClick={(event) => toggleFavorite(event, facility._id)} className=\"uk-button uk-button-danger uk-border-pill\">\n                Eliminar de favoritos\n              </button>\n            ) : (\n              <button onClick={(event) => toggleFavorite(event, facility._id)} className=\"uk-button uk-button-danger uk-border-pill\">\n                Agregar a favoritos\n              </button>\n            )\n            :\n              <button className=\"uk-button uk-button-default uk-button-small\">\n\n                Inicia sesion para agregar a favoritos\n              </button>\n          }\n\n          \n\n          \n          \n        </div>\n      }\n    </div>\n  )\n\n}\n\nexport default FacilityInfo;","import React, { useContext, useEffect, useState } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport currencyFormatter from \"currency-formatter\";                 // Import currency formatter for price display\nimport FacilityForm from './FacilityForm';                          // Import FacilityForm react component\nimport FacilityCard from './FacilityCard';                          // Import FacilityCard react component\nimport Map from '../common/Mapbox';                                 // Import Map react component\n\nimport { getFacilityInfo } from '../../services/facility-services';\n\nconst FacilityInfo = ({ facility, edit, showMap, toggleFavorite, favorites = [], isFavorite = false }) => {\n\n  const history = useHistory();              // declare an instance of useHistory hook to redirect user according to needs\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  // const { form, handleInput, handleFileInput } = useForm();\n  // Destructure user state variable\n  const { user, route, setRoute } = useContext(AppContext);\n  const [viewMap, setViewMap] = useState(false);\n\n  useEffect( () => {\n\n  }, [route]);\n\n  const goBack = () => {\n    edit ? setRoute('myFacilities') : setRoute('search');\n  }\n\n  const toggleMap = () => {\n    \n    showMap = !showMap;\n    setViewMap(showMap)\n    console.log(showMap);\n  }\n\n  return (\n\n      <div className=\"uk-flex uk-flex-center\">\n\n        <div className=\"uk-width-2-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n\n          <div className=\"uk-width-1-1 uk-flex uk-flex-center height10 uk-flex-middle\">\n            <button className=\"uk-button uk-button-default uk-button-small uk-border-pill uk-margin-small-right\" onClick={goBack}>\n              Atras\n            </button>\n            <h3 className=\"uk-margin-remove\">{facility.title}</h3>\n          </div>\n          \n          \n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Descripcion:</label>\n            <div className=\"uk-form-controls\">\n            <p>{facility.description}</p>\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Direccion:</label>\n            <div id=\"geocoder-container\" className=\"uk-form-controls\">\n              <p>{facility.address}</p>\n              <button onClick={toggleMap} id=\"toggle-map\" className=\"uk-button uk-button-default uk-button-small\" type=\"button\">\n                { !viewMap ? \"Mostrar mapa\" : \"Ver imagenes\" }\n              </button>\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Precio:</label>\n            <div className=\"uk-form-controls\">\n            {currencyFormatter.format(facility.price, { code: \"MXN\" })}\n            </div>\n          </div>\n\n        </div>\n\n      \n\n      { viewMap ? \n        <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n          <Map form={facility} width={'35%'} height={'60%'} facility={facility}/> \n        </div> : \n        <div className=\"uk-width-3-5 uk-flex uk-flex-column uk-flex-center uk-flex-middle\">\n          <div className=\"uk-margin-small uk-width-2-3 uk-flex uk-flex-center\">\n            <FacilityCard {...facility} images={facility.images} preview={true} />\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">\n              { facility.is_med_facility ? \n                <p>Este consultorio cuenta con los requerimientos minimos de un consultorio</p> \n                : \n                <p>Este espacio no cuenta con los requerimientos minimos de un consultorio</p>\n              }\n            </label>\n          </div>\n\n          { user._id ? \n\n            isFavorite ? (\n              <button onClick={(event) => toggleFavorite(event, facility._id)} className=\"uk-button uk-button-danger uk-border-pill\">\n                Eliminar de favoritos\n              </button>\n            ) : (\n              <button onClick={(event) => toggleFavorite(event, facility._id)} className=\"uk-button uk-button-danger uk-border-pill\">\n                Agregar a favoritos\n              </button>\n            )\n            :\n              <button className=\"uk-button uk-button-default uk-button-small\">\n\n                Inicia sesion para agregar a favoritos\n              </button>\n          }\n\n          \n\n          \n          \n        </div>\n      }\n    </div>\n  )\n\n}\n\nexport default FacilityInfo;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\n\n// Import API services (CRUD operations) from services file\nimport { getUserFacilities, getAllFacilities, getFacilityInfo, createFacility, updateFacility, deleteFacility } from '../../services/facility-services';\n// Import API services for reading and updating preferences (adding favorite facilities)\nimport { getPreferences, editPreferences } from '../../services/profile-services.js';\n\nimport FacilityForm from './FacilityForm';                          // Import FacilityForm react component\nimport FacilityCard from './FacilityCard';                          // Import FacilityCard react component\nimport FacilityInfo from './FacilityInfo';                          // Import FacilityInfo react component\nimport FacilityInfoSpecial from './FacilityInfoSpecial';                          // Import FacilityInfo react component\n\n// Declare Facility functional component\nconst Facility = () => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n  \n  // Destructure user and route state variables, as well as setRoute to update route state variable\n  const { user, route, setRoute, special } = useContext(AppContext);\n  // Declare facilities state variable and setFacilities function to update the facilities state variable\n  const [facilities, setFacilities] = useState([]);\n  // Declare single facility state variable and setFacility function to update the single facility state variable\n  const [facility, setFacility] = useState([]);\n\n  const [favorites, setFavorites] = useState([]);\n  const { push } = useHistory();              // Destructure push method from useHistory to \"redirect\" user\n\n  // Hook to update component when route state variable is modified (in sidebar or by buttons)\n  useEffect( () => {\n\n    if ( route === 'myFacilities' ) {       // Route corresponding to user's facilities\n\n      getUserFacilities()                   // Fetch facilities belonging to user\n      .then( res => {\n\n        const { facilities } = res.data;    // Destructure user facilities from response\n        setFacilities(facilities);          // Update facilities state variable\n\n      });\n\n    } if ( route === 'showFacility' || route === 'editFacility' || route === 'specialFacility' ) {\n\n      if ( route === 'specialFacility' ) setFacility(special);\n\n      getFacilityInfo(facility)             // Fetch facility from database\n      .then( res => {\n\n        const { facility } = res.data;      // Destructure facility from response\n        setFacility(facility);              // Update single facility state variable\n\n      });\n\n      if (user.usertype === 'Doctor') {\n\n        getPreferences()\n        .then( res => {\n\n          console.log(res.data);\n          const { preferences } = res.data;\n          console.log(`Tus preferencias son: ${preferences}`);\n          console.log(preferences);\n          const { facilities } = preferences;\n          setFavorites(facilities);\n\n        });\n\n      }\n\n    } if ( route === 'delete' ) {\n\n      deleteFacility(facility._id)          // Call delete service with facility id info\n      .then( res => {\n\n        const { facility } = res.data;      // Destructure facility from response\n        setFacility(null);                  // Update facility to null to avoid bugs\n        setRoute('myFacilities');           // Redirect to user facilities\n\n      });\n\n    } else {                                // Corresponds to route 'search' for all facilities\n\n      getAllFacilities()                    // Fetch all facilities in database (no restrictions)\n      .then( res => {\n\n        const { facilities } = res.data;    // Destructure facilities from response\n        setFacilities(facilities);          // Update facilities state variable\n\n      });\n\n    }\n\n  }, [route]);\n\n  // Function to handle submit button click, sending form data to back-end for storage\n  // edit and id paramaters optional for Update operation\n  const handleSubmit = (event, edit = false, id = null) => {\n\n    event.preventDefault();             // Prevent page reloading after submit action\n    delete form.showMap;                // Delete showMap key from form object\n\n    const formData = new FormData();    // Declare formData as new instance of FormData class\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n      if (key === \"images\") {           // Obtain images from array, append to FormData instance\n        for (let file of Array.from(form[key])) {\n          formData.append(key, file);\n        }\n      } if (key === \"coordinates\") {    // Obtain coordinates from array, append to FormData instance\n        for (let coord of form[key]) {\n          formData.append(key, coord);\n        }\n      } else {                          // Append the other keys:values as is\n        formData.append(key, form[key]);\n      }\n    }\n\n    if ( !edit ) {                      // If user is not editing, user is creating\n\n      // Call create service with formData as parameter, which includes form data for Facility creation\n      createFacility(formData).then(res => {\n\n        const { facility } = res.data;  // Destructure recently created facility object from response\n        \n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu consultorio fue guardado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n        setRoute('myFacilities');       // Modify route state variable to myFacilities for correct redirection\n        push('/facilities');            // \"Redirect\" user to myFacilities\n\n      });\n\n    } else {\n\n      // Call update service with formData and facility ID as parameter, to Update facility info\n      updateFacility(formData, id).then(res => {\n\n        const { facility } = res.data;  // Destructure recently created facility object from response\n        \n        // Send UIkit success notification\n        UIkit.notification({\n          message: `<span uk-icon='close'></span> '¡Tu consultorio fue actualizado exitosamente!'`,\n          pos: 'bottom-center',\n          status: 'success'\n        });\n\n        setRoute('myFacilities');       // Modify route state variable to myFacilities for correct redirection\n        push('/facilities');            // \"Redirect\" user to myFacilities\n\n      });\n\n    };\n\n  };\n\n  // Declare function to toggle form display when \"Add facility\" button is clicked, changes route\n  const toggleForm = () => {\n    route === 'myFacilities' ? setRoute('createFacility') : setRoute('myFacilities');\n  }\n\n  // Declare function to set route to facility edit or facility info\n  const showFacility = (event, id, edit) => {\n    \n    event.preventDefault();\n    setFacility(id);\n\n    if (edit) route !== 'editFacility' ? setRoute('editFacility') : setRoute('myFacilities');\n    else route !== 'showFacility' ? setRoute('showFacility') : setRoute('search');\n\n  }\n\n  const toggleFavorite = (event, facilityID) => {\n\n    editPreferences({'facilityID': facilityID, key: 'facilities'})\n    .then( res => {\n\n      const { preferences } = res.data;\n      console.log(res.data);\n      const { facilities } = preferences;\n      \n      setFavorites(facilities);\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n    })\n  }\n\n  return (\n    <div className=\"uk-section\">\n\n      <div className=\"uk-container\">\n\n        { route === 'myFacilities' ? (\n            <div className=\"uk-width-1-1 uk-flex uk-flex-column uk-flex-middle\">\n              <h3>Mis Consultorios</h3>\n              <button onClick={toggleForm} className=\"uk-button uk-button-danger uk-border-pill\">Agregar un nuevo consultorio</button>              \n                { facilities.length > 0 ? (\n                  <div uk-grid=\"true\" className=\"uk-margin uk-width-4-5 uk-child-width-1-3 uk-grid-match uk-grid-medium\">\n                    {facilities.map( (facility, index) => ( <FacilityCard key={index} preview={false} showFacility={showFacility} edit={true} {...facility} /> ) )}\n                  </div> ) \n                : ( <div className=\"uk-container uk-margin-large uk-flex uk-flex-center\">\n                      <h4>No has agregado consultorios</h4>\n                    </div>)\n                 }\n              \n            </div>\n          ) : ( route === 'createFacility' ? (\n              <FacilityForm handleChange={handleInput} handleFileInput={handleFileInput} form={form} submit={handleSubmit} />\n              ) : ( \n                route === 'favorites' ? (\n                  <h3>Tus consultorios favoritos</h3>\n                ) : route === 'showFacility' ? (\n                  <FacilityInfo facility={facility} edit={false} showMap={false} toggleFavorite={toggleFavorite} favorites={favorites} />\n                ) : route === 'editFacility' ? (\n                  <FacilityForm handleChange={handleInput} handleFileInput={handleFileInput} form={form} submit={handleSubmit} edit={true} facility={facility} preview={true} />\n                  ) : route === 'specialFacility' ? (\n                    <FacilityInfoSpecial facility={facility} edit={false} showMap={false} toggleFavorite={toggleFavorite} favorites={favorites} />\n                    ) : (\n                    <div className=\"uk-width-1-1 uk-flex uk-flex-column uk-flex-middle\">\n                      <h3>Busca consultorios</h3>\n                      <div uk-grid=\"true\" className=\"uk-width-4-5 uk-child-width-1-3 uk-grid-match uk-grid-medium\">\n                        { facilities.map( (facility, index) => ( <FacilityCard key={index} preview={false} showFacility={showFacility} edit={false} {...facility} show /> ) ) }\n                      </div>\n                    </div>\n                  )\n                )\n              )\n            \n          \n        }\n\n      </div>\n\n    </div>\n  )\n\n}\n\nexport default Facility;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory, NavLink } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport 'moment/locale/es'\n\nimport { getDoctorConsultations, getPatientConsultations } from '../../services/consultation-services'\n\nconst MyConsultations = ({ consultation, setConsultation }) => {\n\n  const { user, setRoute, setSpecial } = useContext(AppContext);\n  const [consultations, setConsultations] = useState([]);\n\n  useEffect( () => {\n\n    if ( user.usertype === 'Doctor' ) {\n      \n      getDoctorConsultations()\n      .then( res => {\n\n        const { consultations } = res.data;\n        setConsultations(consultations);\n\n      })\n\n    } else if ( user.usertype === 'Patient' ) {\n\n      getPatientConsultations()\n      .then( res => {\n\n        const { consultations } = res.data;\n        setConsultations(consultations);\n\n      })\n\n    }\n\n  }, [user]);\n\n  const handleButtonClick = (consultationID, newRoute) => {\n\n    consultation = consultationID;\n    setConsultation(consultationID);\n    setRoute(newRoute);\n\n  }\n\n  const handleSpecialRedirection = (specialID, newRoute, consultation) => {\n\n    console.log(specialID)\n    console.log(consultation)\n    setSpecial(specialID);\n    setRoute(newRoute);\n\n  }\n\n  return (\n\n      <div className=\"uk-container uk-padding\">\n\n        <h3>{user.usertype === 'Doctor' ? \"Consultas Anteriores\" : \"Mis Consultas\"}</h3>\n\n        { user.usertype === 'Doctor' ? \n            <table className=\"uk-table uk-table-striped uk-table-hover\">\n              <thead>\n                <tr>\n                  <th className=\"uk-text-center\">Paciente</th>\n                  <th className=\"uk-text-center\">Motivo de consulta</th>\n                  <th className=\"uk-text-center\">Diagnostico</th>\n                  <th className=\"uk-text-center\">Receta</th>\n                  <th className=\"uk-text-center\">Fecha</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                { consultations ? \n                    consultations.map( (consultation, index) => \n                      <tr key={index}>\n                        <td>{`${consultation.patient.first_name} ${consultation.patient.last_name1}`}</td>\n                        <td>{consultation.chief_complaint}</td>\n                        <td>{consultation.diagnosis}</td>\n                        <td>\n                          <NavLink to='/facilities'>\n                            <button className=\"uk-button uk-button-default uk-border-pill\"  >\n                              {consultation.facility ? `Ver consultorio` : \"Sin informacion\"}\n                            </button>\n                          </NavLink>\n                        </td>\n                        <td>{moment(consultation.date).locale('es').format('LL')}</td>\n                        <td>\n                          { consultation.isDone ? \n                              <button className=\"uk-button uk-button-default uk-border-pill\" onClick={(event) => handleButtonClick(consultation._id, 'showConsultation')} >\n                                Ver\n                              </button>\n                            :\n                              <button className=\"uk-button uk-button-danger uk-border-pill\" onClick={(event) => handleButtonClick(consultation._id, 'finishConsultation')} >\n                                Realizar\n                              </button>\n                          }\n                        </td>\n                      </tr>\n                    )\n                  : <tr>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n          : <table className=\"uk-table uk-table-striped uk-table-hover\">\n              <thead>\n                <tr>\n                  <th className=\"uk-text-center\">Motivo de consulta</th>\n                  <th className=\"uk-text-center\">Diagnostico</th>\n                  <th className=\"uk-text-center\">Receta</th>\n                  <th className=\"uk-text-center\">Doctor</th>\n                  <th className=\"uk-text-center\">Fecha</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                { consultations ? \n                    consultations.map( (consultation, index) => \n                      <tr key={index}>\n                        <td>{consultation.chief_complaint}</td>\n                        <td>{consultation.diagnosis}</td>\n                        <td>{consultation.prescription ? consultation.prescription : \"Sin receta\"}</td>\n                        <td>{`Dr. ${consultation.doctor.first_name} ${consultation.doctor.last_name1}`}</td>\n                        <td>{moment(consultation.date).locale('es').format('LL')}</td>\n                        <td>\n                          { consultation.isDone ? \n                              <button className=\"uk-button uk-button-default uk-button-small\" onClick={(event) => handleButtonClick(consultation._id, 'showConsultation')} >\n                                Ver Consulta\n                              </button>\n                            :\n                              \"Consulta por realizar\"\n                          }  \n                        </td>\n                      </tr>\n                    )\n                  : <tr>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                    </tr>\n              }\n            </tbody>\n          </table>\n        }\n      </div>\n\n  )\n};\n\nexport default MyConsultations;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport { NavLink } from 'react-router-dom';                         // Import NavLink for \"navigation\"\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\n\n// Declare FacilityForm functional component, receives action variable for conditional rendering,\n// email, password and confpassword variables from form state variable, and submit and handleChange functions\nconst ConsultationForm = ( { handleSubmit, handleInput, form, consultation = {} } ) => {\n\n  const { user, setRoute } = useContext(AppContext);    // Destructure user state variable\n  const { push } = useHistory();              // Destructure push method from useHistory to \"redirect\" user\n\n  return (\n\n    <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-column uk-flex-center uk-flex-middle\" onSubmit={handleSubmit}>\n      <p className=\"uk-text-primary\">Una vez concluida la consulta, no se podran realizar cambios</p>\n      <div className=\"uk-margin-small\">\n        <label className=\"uk-form-label\">Motivo de consulta:</label>\n        <div className=\"uk-form-controls\">\n          <input onChange={handleInput} name=\"chief_complaint\" defaultValue={consultation.chief_complaint} className=\"uk-input uk-form-width-large\" type=\"text\" />\n        </div>\n      </div>\n\n      <div className=\"uk-margin-small\">\n        <label className=\"uk-form-label\">Sistema afectado:</label>\n        <div className=\"uk-form-controls\" >\n          <select className=\"uk-select uk-form-width-large\" name=\"systems_chief_complaint\" >\n            <option value=\"Cardiovascular\">Cardiovascular</option>\n            <option value=\"Dermatológico\">Dermatológico</option>\n            <option value=\"Dolor\">Dolor</option>\n            <option value=\"Endócrino\">Endócrino</option>\n            <option value=\"Gastrointestinal\">Gastrointestinal</option>\n            <option value=\"Génito-Urinario\">Génito-Urinario</option>\n            <option value=\"Músculo-esquelético\">Músculo-esquelético</option>\n            <option value=\"Órganos de los Sentidos\">Órganos de los Sentidos</option>\n            <option value=\"Otros\">Otros</option>\n            <option value=\"Psiquiátrico\">Psiquiátrico</option>\n            <option value=\"Respiratorio\">Respiratorio</option>\n            <option value=\"Sistema Hemato-Linfático\">Sistema Hemato-Linfático</option>\n            <option value=\"Sistema Inmunológico\">Sistema Inmunológico</option>\n            <option value=\"Sistema Nervioso\">Sistema Nervioso</option>\n            <option value=\"Síntomas Generales\">Síntomas Generales</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"uk-margin-small\">\n        <label className=\"uk-form-label\">Observaciones Examen Fisico:</label>\n        <div className=\"uk-form-controls\">\n          <textarea onChange={handleInput} name=\"phys_exam\" defaultValue={consultation.phys_exam} className=\"uk-textarea uk-form-width-large\" rows=\"3\" />\n        </div>\n      </div>\n\n      <div className=\"uk-margin-small\">\n        <label className=\"uk-form-label\">Diagnostico:</label>\n        <div className=\"uk-form-controls\">\n          <textarea onChange={handleInput} name=\"diagnosis\" defaultValue={consultation.diagnosis} className=\"uk-textarea uk-form-width-large\" rows=\"3\" />\n        </div>\n      </div>\n\n      <div className=\"uk-margin-small\">\n        <label className=\"uk-form-label\">Pronostico:</label>\n        <div className=\"uk-form-controls\">\n          <textarea onChange={handleInput} name=\"prognosis\" defaultValue={consultation.prognosis} className=\"uk-textarea uk-form-width-large\" rows=\"3\" />\n        </div>\n      </div>\n    \n      <div className=\"uk-margin\">\n        <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n          Concluir Consulta\n        </button>\n      </div>\n    </form>\n  );\n}\nexport default ConsultationForm;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport { NavLink } from 'react-router-dom';                         // Import NavLink for \"navigation\"\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst ConsultationInfo = ({ consultation ={} }) => {\n\n  // useEffect( () => {\n\n  //   // get vital signs\n\n    \n  // },[])\n\n  return (\n\n    <div className=\"uk-flex uk-flex-center uk-width-1-1\">\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-flex-middle\">\n        <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-column uk-flex-center uk-flex-middle\" >\n          <p className=\"uk-text-primary\">Consulta realizada el {moment(consultation.date).locale('es').format('LL')}</p>\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Motivo de consulta:</label>\n            <div className=\"uk-form-controls\">\n              <input defaultValue={consultation.chief_complaint} className=\"uk-input uk-form-width-large\" type=\"text\" disabled={true} />\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Sistema afectado:</label>\n            <div className=\"uk-form-controls\">\n              <input defaultValue={consultation.systems_chief_complaint} className=\"uk-input uk-form-width-large\" type=\"text\" disabled={true} />\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Observaciones Examen Fisico:</label>\n            <div className=\"uk-form-controls\">\n              <textarea defaultValue={consultation.phys_exam} className=\"uk-textarea uk-form-width-large\" rows=\"3\" disabled={true} />\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Diagnostico:</label>\n            <div className=\"uk-form-controls\">\n              <textarea defaultValue={consultation.diagnosis} className=\"uk-textarea uk-form-width-large\" rows=\"3\" disabled={true} />\n            </div>\n          </div>\n\n          <div className=\"uk-margin-small\">\n            <label className=\"uk-form-label\">Pronostico:</label>\n            <div className=\"uk-form-controls\">\n              <textarea defaultValue={consultation.prognosis} className=\"uk-textarea uk-form-width-large\" rows=\"3\" disabled={true} />\n            </div>\n          </div>\n        </form>\n      </div>\n\n    </div>\n  )\n\n};\n\nexport default ConsultationInfo;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getConsultationInfo, editConsultation } from '../../services/consultation-services'\n\nimport MyConsultations from './MyConsultations';\nimport ConsultationForm from './ConsultationForm';\nimport ConsultationInfo from './ConsultationInfo';\n\nconst Consultation = ({ consultationID = {} }) => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { user, route, setRoute } = useContext(AppContext);\n  const [consultation, setConsultation] = useState(consultationID);\n\n  useEffect( () => {\n\n    if ( route === 'showConsultation' || route === 'finishConsultation' ) {\n\n      getConsultationInfo(consultation)\n      .then( res => {\n\n        const { consultation } = res.data;\n        setConsultation(consultation);\n        console.log(consultation)\n\n      });\n\n    }\n\n  }, [route]);\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n\n    console.log(form);\n    \n    // if ( route === 'preferences' ) {\n\n    // Call edit service with formData as parameter, which includes form data for user profile information\n    editConsultation(consultation._id, form)\n    .then( res => {\n\n      const { consultation } = res.data    // Destructure updated preferences document from response\n      \n      setConsultation(consultation._id);\n      //setRoute('showConsultation');        // Modify preferences state variable with updated information\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La consulta fue concluida exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n\n  };\n\n  return (\n    <div className=\"uk-section\">\n\n      { route === 'showConsultation' ? (\n          <div className=\"uk-container\">\n            <h3>Informacion de Consulta {consultation._id}</h3>\n            <ConsultationInfo consultation={consultation} />\n          </div>\n        ) : (\n          route === 'finishConsultation' ? (\n            <div className=\"uk-container\">\n              <h3>Consulta para {consultation.patient ? consultation.patient.first_name.length > 1 ? consultation.patient.first_name : consultation.patient.email : \"Paciente\"}</h3>\n              <ConsultationForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} consultation={consultation} />\n            </div>\n          ) : \n            <div className=\"uk-container\">\n              <MyConsultations consultation={consultation} setConsultation={setConsultation} />\n            </div>\n        )\n      }\n\n    </div>\n  )\n\n}\n\nexport default Consultation;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport 'moment/locale/es'\n\nimport { getDoctorConsultations, getPatientConsultations } from '../../services/consultation-services'\n\nconst MyPrescriptions = ({ prescriptions = [], setPrescription }) => {\n\n  const { user, setRoute } = useContext(AppContext);\n  // const [consultations, setConsultations] = useState([]);\n\n  // useEffect( () => {\n\n  //   if ( user.usertype === 'Doctor' ) {\n      \n  //     getDoctorConsultations()\n  //     .then( res => {\n\n  //       const { consultations } = res.data;\n  //       setConsultations(consultations);\n\n  //     })\n\n  //   } else if ( user.usertype === 'Patient' ) {\n\n  //     getPatientConsultations()\n  //     .then( res => {\n\n  //       const { consultations } = res.data;\n  //       setConsultations(consultations);\n\n  //     })\n\n  //   }\n\n  // }, [user]);\n\n  const handleButtonClick = (prescriptionID, newRoute) => {\n\n    setPrescription(prescriptionID);\n    setRoute(newRoute);\n\n  }\n\n  return (\n\n      <div className=\"uk-container uk-padding\">\n\n        <h3>{user.usertype === 'Doctor' ? \"Recetas Anteriores\" : \"Mis Recetas\"}</h3>\n\n        { user.usertype === 'Doctor' ? (\n            <table className=\"uk-table uk-table-striped uk-table-hover\">\n              <thead>\n                <tr>\n                  <th className=\"uk-text-center\">Paciente</th>\n                  <th className=\"uk-text-center\">Medicamento</th>\n                  <th className=\"uk-text-center\">Diagnostico</th>\n                  <th className=\"uk-text-center\">Consulta</th>\n                  <th className=\"uk-text-center\">Fecha</th>\n                </tr>\n              </thead>\n              <tbody>\n                { prescriptions ? \n                    prescriptions.map( (prescription, index) => \n                      <tr key={index}>\n                        \n                        <td>{prescription.patient.first_name.length > 1 ? `${prescription.patient.first_name} ${prescription.patient.last_name1}` : \"Paciente\"}</td>\n                        <td>{prescription.generic_name}</td>\n                        <td>{prescription.consultation ? prescription.consultation.diagnosis : \"Sin consulta asociada\"}</td>\n                        <td>{prescription.consultation ? prescription.consultation : \"Sin consulta asociada\"}</td>\n                        <td>{moment(prescription.date).locale('es').format('LL')}</td>\n                      </tr>\n                    )\n                  : <tr>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                      <td>Cargando</td>\n                    </tr>\n                }\n              </tbody>\n            </table>\n        ) : (\n          <table className=\"uk-table uk-table-striped uk-table-hover\">\n            <thead>\n              <tr>\n                <th className=\"uk-text-center\">Medicamento</th>\n                <th className=\"uk-text-center\">Diagnostico</th>\n                <th className=\"uk-text-center\">Consulta</th>\n                <th className=\"uk-text-center\">Doctor</th>\n                <th className=\"uk-text-center\">Fecha</th>\n              </tr>\n            </thead>\n            <tbody>\n              { prescriptions ? \n                  prescriptions.map( (prescription, index) => \n                    <tr key={index}>\n                      <td>{prescription.generic_name}</td>\n                      <td>{prescription.consultation ? prescription.consultation.diagnosis : \"Sin consulta asociada\"}</td>\n                      <td>{prescription.consultation ? prescription.consultation : \"Sin consulta asociada\"}</td>\n                      <td>{prescription.doctor.first_name.length > 1 ? `Dr. ${prescription.doctor.first_name} ${prescription.doctor.last_name1}` : \"Doctor\"}</td>\n                      <td>{moment(prescription.date).locale('es').format('LL')}</td>\n                    </tr>\n                  )\n                : <tr>\n                    <td>Cargando</td>\n                    <td>Cargando</td>\n                    <td>Cargando</td>\n                    <td>Cargando</td>\n                    <td>Cargando</td>\n                  </tr>\n              }\n            </tbody>\n          </table>\n        )\n      }\n\n          \n        \n      </div>\n\n  )\n};\n\nexport default MyPrescriptions;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport { NavLink } from 'react-router-dom';                         // Import NavLink for \"navigation\"\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\n\nimport { getAllPatients } from '../../services/patient-services';\n\n// Declare FacilityForm functional component, receives action variable for conditional rendering,\n// email, password and confpassword variables from form state variable, and submit and handleChange functions\nconst PrescriptionForm = ( { handleSubmit, handleInput, form, prescription = {}, consultationID = null } ) => {\n\n  const { user, setRoute } = useContext(AppContext);    // Destructure user state variable\n  const { push } = useHistory();              // Destructure push method from useHistory to \"redirect\" user\n\n  const [patients, setPatients] = useState([]);\n\n  useEffect( () => {\n\n    getAllPatients()\n    .then( res => {\n\n      const { patients } = res.data;\n      setPatients(patients);\n\n    })\n\n  }, []);\n\n  return (\n\n    <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-wrap uk-flex-center uk-flex-middle\" onSubmit={handleSubmit}>\n      <div className=\"uk-width-1-1\">\n        <p className=\"uk-text-primary\">Una vez creada la receta, no se podran realizar cambios</p>\n      </div>\n      \n      \n      <div className=\"uk-width-3-5 uk-margin\">\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Nombre de patente:</label>\n          <div className=\"uk-form-controls\">\n            <input onChange={handleInput} name=\"brand_name\"  defaultValue={prescription.brand_name} className=\"uk-input uk-form-width-large\" type=\"text\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Nombre generico:</label>\n          <div className=\"uk-form-controls\">\n            <input onChange={handleInput} name=\"generic_name\"  defaultValue={prescription.generic_name} className=\"uk-input uk-form-width-large\" type=\"text\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Dosis:</label>\n          <div className=\"uk-form-controls\">\n            <textarea onChange={handleInput} name=\"dose\"  defaultValue={prescription.dose} className=\"uk-textarea uk-form-width-large\" rows=\"3\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Presentacion:</label>\n          <div className=\"uk-form-controls\">\n            <textarea onChange={handleInput} name=\"dosage_form\"  defaultValue={prescription.dosage_form} className=\"uk-textarea uk-form-width-large\" rows=\"3\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Indicaciones:</label>\n          <div className=\"uk-form-controls\">\n            <textarea onChange={handleInput} name=\"directions\"  defaultValue={prescription.directions} className=\"uk-textarea uk-form-width-large\" rows=\"3\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"uk-width-2-5 uk-margin\">\n        <p>Todos los pacientes</p>\n          <div id=\"height30ovfw\" className=\"uk-container uk-width-5-6\">\n            <ul className=\"uk-list uk-list-striped\">\n                  <li key={null}>\n                    <label className=\"uk-flex uk-flex-around uk-flex-middle\">\n                      <input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"patient\" value=\"5df837b4b1579b1646f36db2\" />\n                        Paciente no registrado\n                    </label>\n                  </li>\n              { patients ? (\n                  patients.map( (patient, index) => \n                  <li key={patient._id}>\n                    <label className=\"uk-flex uk-flex-around uk-flex-middle\">\n                      <input onChange={handleInput} className=\"uk-radio\" type=\"radio\" name=\"patient\" value={patient._id} />\n                        {patient.first_name ? patient.first_name : patient.email}\n                    </label>\n                    <input onChange={handleInput} type=\"hidden\" name=\"patient\" value={patient._id} />\n                  </li> )\n                ) : (\n                  <li>Cargando pacientes</li>\n                ) }\n            </ul>\n          </div>\n      </div>\n    \n      <div className=\"uk-margin uk-width-1-1\">\n        <button className=\"uk-button uk-button-danger uk-border-pill\" type=\"submit\">\n          Crear receta\n        </button>\n      </div>\n\n    </form>\n  );\n}\nexport default PrescriptionForm;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport { NavLink } from 'react-router-dom';                         // Import NavLink for \"navigation\"\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nconst PrescriptionInfo = ({ prescription ={} }) => {\n\n  return (\n\n    <div className=\"uk-flex uk-flex-center uk-width-1-1\">\n      <form className=\"uk-form-horizontal uk-margin-medium uk-flex uk-flex-center\" >\n        <p className=\"uk-text-primary\">Receta realizada el {moment(prescription.date).locale('es').format('LL')}</p>\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Nombre de patente:</label>\n          <div className=\"uk-form-controls\">\n            <input defaultValue={prescription.brand_name} className=\"uk-input uk-form-width-large\" type=\"text\" disabled=\"true\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Nombre generico:</label>\n          <div className=\"uk-form-controls\">\n            <input defaultValue={prescription.generic_name} className=\"uk-input uk-form-width-large\" type=\"text\" disabled=\"true\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Dosis:</label>\n          <div className=\"uk-form-controls\">\n            <textarea defaultValue={prescription.dose} className=\"uk-textarea uk-form-width-large\" rows=\"3\" disabled=\"true\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Presentacion:</label>\n          <div className=\"uk-form-controls\">\n            <textarea defaultValue={prescription.dosage_form} className=\"uk-textarea uk-form-width-large\" rows=\"3\" disabled=\"true\" />\n          </div>\n        </div>\n\n        <div className=\"uk-margin-small\">\n          <label className=\"uk-form-label\">Indicaciones:</label>\n          <div className=\"uk-form-controls\">\n            <textarea defaultValue={prescription.directions} className=\"uk-textarea uk-form-width-large\" rows=\"3\" disabled=\"true\" />\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n\n};\n\nexport default PrescriptionInfo;","import React, { useEffect, useState, useContext } from 'react';     // Import React, useEffect, useState and useContext hooks\nimport { useHistory } from 'react-router-dom';                      // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                      // Import AppContext to use created context\nimport useForm from '../../hooks/useForm';                          // Import useForm custom hook\nimport UIkit from 'uikit';                                          // Import UIkit for notifications\nimport moment from 'moment';                                        // Import momentjs for date formatting\n\nimport { getUserPrescriptions, getPrescriptionInfo, createPrescription } from '../../services/prescription-services'\n\nimport MyPrescriptions from './MyPrescriptions';\nimport PrescriptionForm from './PrescriptionForm';\nimport PrescriptionInfo from './PrescriptionInfo';\n\nconst Prescription = ({ prescriptionID = {} }) => {\n\n  // Destructure form state variable, handleInput and handleFileInput functions for form state manipulation\n  const { form, handleInput, handleFileInput } = useForm();\n\n  const { user, route, setRoute } = useContext(AppContext);\n  const [prescription, setPrescription] = useState(prescriptionID);\n  const [prescriptions, setPrescriptions] = useState([]);\n\n  useEffect( () => {\n    \n    getUserPrescriptions()\n    .then( res => {\n\n      const { prescriptions } = res.data;\n      setPrescriptions(prescriptions);\n\n    });\n\n    if ( route === 'showPrescription' ) {\n\n      getPrescriptionInfo(prescription)\n      .then( res => {\n\n        const { prescription } = res.data;\n        setPrescription(prescription);\n\n      });\n\n    }\n\n  }, [route]);\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n\n    console.log(form);\n    \n    // if ( route === 'preferences' ) {\n\n    // Call edit service with formData as parameter, which includes form data for user profile information\n    createPrescription(form)\n    .then( res => {\n\n      const { prescription } = res.data    // Destructure updated preferences document from response\n      \n      setPrescription(prescription._id);\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> '¡La receta fue creada exitosamente!'`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( error => {\n\n      console.log(error);\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> ${error}`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n\n  };\n\n  return (\n    <div className=\"uk-section\">\n\n      { route === 'showPrescription' ? (\n          <div className=\"uk-container\">\n            <h3>Informacion de Receta {prescription._id}</h3>\n            <PrescriptionInfo prescription={prescription} />\n          </div>\n        ) : (\n          route === 'newPrescription' ? (\n            <div className=\"uk-container\">\n              <h3>Receta para {prescription.patient ? prescription.patient.first_name.length > 1 ? prescription.patient.first_name : prescription.patient.email : \"Paciente\"}</h3>\n              <PrescriptionForm handleSubmit={handleSubmit} handleInput={handleInput} form={form} prescription={prescription} />\n            </div>\n          ) : \n            <div className=\"uk-container\">\n              <MyPrescriptions prescriptions={prescriptions} setPrescriptions={setPrescriptions} />\n            </div>\n        )\n      }\n\n    </div>\n  )\n\n};\n\nexport default Prescription;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'https://nubiomed-iron.herokuapp.com/api/prescriptions' : 'http://localhost:3000/api/prescriptions';\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getUserPrescriptions = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createPrescription = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getPrescriptionInfo = (prescriptionID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${prescriptionID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};","import React, { useContext } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\n// Import Components for navigation\nimport Landing from './components/landing/Landing';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Profile from './components/profile/Profile';\nimport Preferences from './components/profile/Preferences';\nimport Doctors from './components/doctor/Doctors';\nimport DoctorLanding from './components/doctor/DoctorLanding';\nimport DoctorHome from './components/doctor/DoctorHome';\nimport PatientHome from './components/patient/PatientHome';\nimport Patients from './components/doctor/myPatients/Patients'\nimport Facility from './components/facility/Facility';\nimport Consultation from './components/consultation/Consultation';\nimport Prescription from './components/prescription/Prescription';\nimport Map from './components/common/Mapbox';\nimport AppLoader from './components/common/Loader';\nimport Calendar from './components/schedule/Calendar';\n\nconst Router = () => {\n\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  const handleRoute = (newRoute) => setRoute(newRoute);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <DoctorLanding />\n      </Route>\n      <Route exact path=\"/home\">\n        { user.usertype === 'Doctor' ? \n          <Calendar usertype={user.usertype}/> :\n          <Consultation />\n        }\n      </Route>\n      <Route exact path=\"/doctor-landing\">\n        <DoctorLanding />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup usertype=\"Patient\"/>\n      </Route>\n      <Route path=\"/doctor-signup\">\n        <Signup usertype=\"Doctor\"/>\n      </Route>\n      <Route path=\"/login\">\n        <Login usertype=\"Patient\"/>\n      </Route>\n      <Route path=\"/doctor-login\">\n        <Login usertype=\"Doctor\"/>\n      </Route>\n      <Route path=\"/schedule\">\n        <Calendar usertype={user.usertype}/>\n      </Route>\n      <Route path=\"/doctors\">\n        <Doctors />\n      </Route>\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/patients\">\n        <Patients />\n      </Route>\n      <Route path=\"/consultations\">\n        <Consultation />\n      </Route>\n      <Route path=\"/prescriptions\">\n        <Prescription />\n      </Route>\n      <Route path=\"/facilities\">\n        <Facility />\n      </Route>\n      <Route path=\"/map\">\n        <Map />\n      </Route>\n      <Route path=\"/preferences\">\n        <Preferences />\n      </Route>\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\n\n// Declare Nav functional component (Navigation Bar)\nconst Nav = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, route, setRoute, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n\n  };\n\n  return (\n    <nav className=\"uk-navbar-container\" uk-navbar=\"true\">\n        <div className=\"uk-navbar-left uk-margin-left\">\n          <ul className=\"uk-navbar-nav\">\n            <li className=\"uk-active\">\n              <NavLink to=\"/\">\n                <div className=\"uk-flex uk-flex-middle\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={64} height={64} src=\"https://res.cloudinary.com/angelmc32/image/upload/v1574445487/nubiomed-api/nubiomed-logo.png\" alt=\"logo\" />\n                  </div>\n                  Nubiomed\n                </div>\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n        <div className=\"uk-navbar-right uk-margin-right\">\n          <ul className=\"uk-navbar-nav\">\n            <li className=\"uk-active uk-margin-right\">\n              <NavLink to=\"#services\">\n                Servicios\n              </NavLink>\n              <div className=\"uk-navbar-dropdown uk-margin-remove\">\n                <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                  <li onClick={(event) => setRoute('doctors')} >\n                    <NavLink to=\"/doctors\">Encuentra un Doctor\n                    </NavLink>\n                  </li>\n                  <li onClick={(event) => setRoute('doctors')} >\n                    <NavLink to=\"/facilities\">Renta Consultorio\n                    </NavLink>\n                  </li>\n                  <li >\n                    <NavLink to=\"/map\">Consultorios cerca de mi\n                    </NavLink>\n                  </li>\n                </ul>\n              </div>\n            </li>\n\n            { !user._id ? (\n                <li className=\"uk-active\">\n                  <NavLink to=\"/doctor-login\">\n                    <button className=\"uk-button uk-button-default uk-button-small\">¿Es usted doctor?</button>\n                  </NavLink>\n                </li>\n              ) : (\n                user.usertype === 'Doctor' ? (\n                  <li>\n                    <Link to=\"/schedule\">\n                      <button className=\"uk-button uk-button-primary uk-border-pill\" onClick={event => setRoute(\"schedule\")} >Nueva Consulta</button>\n                    </Link>\n                  </li>\n                ) : (\n                  <li>\n                    <Link to=\"/doctors\">\n                      <button className=\"uk-button uk-button-primary uk-border-pill\" onClick={event => setRoute(\"doctors\")} >Buscar doctor</button>\n                    </Link>\n                  </li>\n                )\n              )\n            }\n            \n            { !user._id ? (\n                <li>\n                  <Link to=\"/login\">\n                    <button className=\"uk-button uk-button-primary uk-border-pill\" >Entrar</button>\n                  </Link>\n                </li>\n              ) : (\n                <li className=\"uk-active\">\n                <NavLink to=\"/profile\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p>Mi Perfil</p>\n                </NavLink>\n                <div className=\"uk-navbar-dropdown uk-margin-remove\">\n                  <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                    <li className=\"uk-active\">\n                      <button className=\"uk-button uk-button-danger uk-border-pill uk-button-small\" onClick={handleLogout}>Cerrar sesión</button>\n                    </li>\n                  </ul>\n                </div>\n                </li>\n              )}\n            \n          </ul>\n        </div>\n      </nav>\n  );\n\n};\n\nexport default Nav;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { NavLink, Link } from 'react-router-dom';               // Import NavLink for \"navigation\"\n//import { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\n\n// Declare Sidebar functional component\nconst Sidebar = () => {\n  \n  // Destructure user and route state variables from context and setRoute function to change route\n  const { user, setRoute } = useContext(AppContext); // Destructure user state variable\n\n  // Declare function to update the route state variable according to the selected link for inner component nav\n  const handleRoute = (event, newRoute) => {\n    \n    event.preventDefault();               // Prevent page reloading after submit action\n    setRoute(newRoute);                   // Update route state variable with route sent as parameter\n  \n  }\n\n  // Destructure push method from useHistory to \"redirect\" user\n  //const { push } = useHistory();\n\n  return (\n     user.usertype === 'Doctor' ? (\n      <div className=\"sidebar uk-flex uk-flex-column uk-flex-center uk-flex-top\">\n          <ul className=\"uk-nav-default uk-nav-parent-icon uk-height-large uk-width-4-5 uk-text-left uk-margin-left\" uk-nav=\"true\">\n            <li className=\"uk-active\" onClick={event => handleRoute(event, \"schedule\")}>\n              <NavLink to=\"/schedule\">Agenda</NavLink>\n            </li>\n            <li className=\"uk-parent uk-active\">\n              <NavLink to=\"/consultations\">Consultas</NavLink>\n              <ul className=\"uk-nav-sub\">\n                <li onClick={event => handleRoute(event, \"newConsultation\")} >\n                  <Link to=\"/consultations\">Nueva Consulta</Link>\n                </li>\n                <li onClick={event => handleRoute(event, \"myConsultations\")} >\n                  <NavLink to=\"/consultations\">Mis Consultas</NavLink>\n                </li>\n              </ul>\n            </li>\n            <li className=\"uk-parent uk-active\">\n              <a href=\"#\">Recetas</a>\n              <ul className=\"uk-nav-sub\">\n                <li onClick={event => handleRoute(event, \"newPrescription\")} >\n                  <NavLink to=\"/prescriptions\">Nueva Receta</NavLink>\n                </li>\n                <li onClick={event => handleRoute(event, \"myPrescriptions\")} >\n                  <NavLink to=\"/prescriptions\">Recetas Anteriores</NavLink>\n                </li>\n              </ul>\n            </li>\n            <li className=\"uk-parent uk-active\">\n              <a href=\"#\">Consultorios</a>\n              <ul className=\"uk-nav-sub\">\n                <li onClick={event => handleRoute(event, \"search\")}>\n                  <NavLink to=\"/facilities\">Buscar</NavLink>\n                </li>\n                <li onClick={event => handleRoute(event, \"myFacilities\")}>\n                  <NavLink to=\"/facilities\">Mis Consultorios</NavLink>\n                </li>\n              </ul>\n            </li>\n            <li className=\"uk-active\">\n              <NavLink to=\"/preferences\">Preferencias</NavLink>\n            </li>\n          </ul>\n        </div>\n      ) : (\n        <div className=\"sidebar uk-flex uk-flex-column uk-flex-center uk-flex-top\">\n        <ul className=\"uk-nav-default uk-nav-parent-icon uk-height-large uk-width-4-5 uk-text-left uk-margin-left\" uk-nav=\"true\">\n        <li className=\"uk-active\" onClick={event => handleRoute(event, \"myConsultations\")} >\n            <NavLink to=\"/consultations\">Mis Consultas</NavLink>\n          </li>\n          <li className=\"uk-active\">\n            <NavLink to=\"/prescriptions\">Mis Recetas</NavLink>\n          </li>\n          <li className=\"uk-active\" onClick={event => handleRoute(event, \"doctors\")} >\n            <NavLink to=\"/doctors\">Doctores</NavLink>\n          </li>\n          <li className=\"uk-parent uk-active\">\n            <a href=\"#\">Consultorios</a>\n            <ul className=\"uk-nav-sub\">\n              <li onClick={event => handleRoute(event, \"search\")}>\n                <NavLink to=\"/facilities\">Buscar</NavLink>\n              </li>\n              <li onClick={event => handleRoute(event, \"myFacilities\")}>\n                <NavLink to=\"/facilities\">Mis Consultorios</NavLink>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    )    \n  );\n};\n\nexport default Sidebar;","import React, { useContext } from 'react';\nimport Router from './Router';\nimport { AppContext } from './AppContext';\nimport './App.css';\nimport Nav from './components/common/Nav'\nimport Sidebar from './components/common/Sidebar';\n\nfunction App() {\n\n  const { user } = useContext(AppContext); // Destructure user state variable\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      { user._id ? (\n        <div className=\"uk-flex\">\n          <Sidebar />\n          <Router />\n        </div>\n      ) : (\n        <Router />\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\n// Import Mapbox for map rendering using Mapbox API\n//import mapboxgl from 'mapbox-gl';\n//mapboxgl.accessToken = process.env.MAPBOX_ACCESS_TOKEN;\n\n\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/stethoscope.89aba8cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/homemarker.23c7fe29.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital.e291746c.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor.5d20e5df.svg\";","module.exports = __webpack_public_path__ + \"static/media/first-aid-kit.45349799.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital.bd57d8e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/medical-file.7e695e52.svg\";","module.exports = __webpack_public_path__ + \"static/media/prescription.02aa910e.svg\";","module.exports = __webpack_public_path__ + \"static/media/vademecum.dd128559.svg\";"],"sourceRoot":""}